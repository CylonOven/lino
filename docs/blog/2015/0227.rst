=========================
Friday, February 27, 2015
=========================

Plugin dependence
=================

The :attr:`needs_plugins <lino.core.plugin.Plugin.needs_plugins>`
attribute is relatively new, and many dependencies are not yet managed
automatically just because I did not yet take the time to declare
them.  Now I started to make more consistent usage of this attribute
by declaring ot for two plugins:

- :mod:`lino.modlib.contacts`  needs :mod:`lino.modlib.countries`
- :mod:`lino.modlib.cal` needs :mod:`lino.modlib.contenttypes`

This required a little optimization: in :class:`lino.core.site.Site`,
the :meth:`load_plugins <lino.core.site.Site.load_plugins>` method now
has a more natural behaviour: when a plugin requested by
:meth:`get_installed_apps <lino.core.site.Site.get_installed_apps>`
needs some other plugin, then this other plugin is inserted into the
resulting :setting:`INSTALLED_APPS` *before* the plugin who needs
it. Until now these automatically installed plugins went to the end of
the list. Which was disturbing when using the above dependencies
because the demo fixtures need to get loaded in the right order.

Side effect: This change requires a database dump & restore because
the primary keys ContentType may have changed.

Another (positive) side effect: The tables `BusyVisitors`,
`GoneVisitors`, `MyWaitingVisitors` and `WaitingVisitors` in
:mod:`lino.modlib.reception` are subclasses of :class:`cal.Guests
<lino.modlib.cal.models_guest.Guests>` and use the same
`detail_layout` of. But due to the "wrong" loading order, Lino until
now generated a new :class:`DetailLayout
<lino.core.layouts.DetailLayout>` instance for each of them.

An yet another side effect : the order of some menu items in
:ref:`welfare` changed.


Miscellaneous
=============

I discovered that :class:`lino_welfare.modlib.debts.models.Budget` has
no CharField at all. which resulted in a strange behaviour: the quick
search did not work. Now I added an explicit
:attr:`quick_search_fields
<lino.core.model.Model.quick_search_fields>` so that they can now
search by partner name at least::

    quick_search_fields = ['partner__name']


New choicelist "Overlap groups"
===============================

I fixed :ticket:`104` (Overlapping contracts are sometimes allowed),
which required a change in database structure: a new database field
:attr:`overlap_group
<lino_welfare.modlib.isip.mixins.ContractTypeBase.overlap_group>`
which points to the new choicelist :class:`isip.OverlapGroups
<lino_welfare.modlib.isip.choicelists.OverlapGroups>`.



from lino.api.runtime import *
from lino.utils import mti
p = contacts.Person.objects.get(pk=178)
cli = pcsw.Client.objects.get(pk=178)
ar = contacts.Partners.request(renderer=settings.SITE.kernel.extjs_renderer)
print E.tostring(p.get_mti_buttons(ar))
