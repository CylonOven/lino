:state: todo
:module: lino_welfare

#93 : Sozialsekretariat
=======================


todo
-----

- Lino erweitern, dass ein customisierbarer Dialog vor dem Erstellen
  programmiert werden kann.  Damit es wie in TIM geht:
  Dublettenkontrolle mit eventuellem Dialog *vor* dem Erstellen.
  Gefahr, dass wir irgenwann aus dem Fusionieren nicht mehr
  rauskommen.

- Validierung in drei Stufen: (grün) OK, (rot) nicht OK, (orange)
  Warnung. Zum Beispiel "Achtung, diese BIC ist eine andere als die,
  die Lino vorgeschlagen hätte".

- sepa.Account.managed : übersetzen mit "Verwaltet". 
  Und Hilfetext "Dieses Bankkonto wird durch das ÖSHZ verwaltet."

- Bankkonten auch für Lieferanten? Ja. Aber ohne ein Feld
  "Verwaltet". Sowieso auch ein Ankreuzfeld "Primärkonto". Und zwei
  Felder IBAN und BIC auch pro Partner.

- Eingabe Bankkonten : Wenn belgische IBAN angegeben ist und BIC leer
  ist, soll Lino eine BIC vorschlagen. Wenn er sie kennt.

- Collect-Modus des eidreader einschalten.

- Leute, deren offizieller Name "(Decl.)" enthält. Wenn dieser Text im
  Namen und/oder Vornamen der eID-Karte steht, dann wird er aus dem
  Namen entfernt und stattdessen ein neues Ankreuzfeld "declared_name"
  eingeschaltet.

- Datenmigration: ich bin noch nicht sicher, ob alles gut rüber
  kommt. Zum Beispiel kommen da diverse Fehlermeldungen u.A. eine
  ganze Serie von "Deferred sepa.Account()" wegen ungültiger BIC oder
  IBAN (was auch so sein sollte), die dann am Ende aber einfach
  "verschwinden" statt wie es sein sollte als "unresolved" bewarnt zu
  werden.

- Beziehungen.  Aus TIM importieren und dann hören, was die Benutzer
  zu der neuen Datenbankstruktur sagen. Bezeichnung "Beziehungen"
  statt "Personen zu Lasten".  Was wird aus Ehepartnern?  Wie
  reagieren die Leute darauf, dass man von der Frau aus nicht mehr den
  Mann sieht?  Weitere Beziehungsarten: Zusammenlebend usw.
  (humanlinks).


feedback
--------

- `isip.Contract`, `debts.Budet` and `notes.Note` must be
  *attestables*, not simply `CachedPrintable`.

  In order to avoid manual changes in the two templates used to print
  `isip.Contract` and `jobs.Contract`, we can override their
  `get_printable_context` method.

  And I must change the current template naming strategy.  The
  `lino_welfare/config/attestations/Attestation` directory is okay for
  general templates like `base.body.html` and `default.body.html`,
  `certificate.body.html`, but e.g. `cal_Guest.body.html` should be
  `cal/Guest/presence_cert.body.html`

- Ein paar konkrete Beispiele von Bescheinigungen fertig ausarbeiten.

- Badges. in Charleroi haben sie die sogenannten "tests de
  niveau". Das sind kleine Prüfungen, die vom ÖSHZ organisiert werden,
  und die eine Fähigkeit bestätigen. Zum Beispiel "Anstreichen",
  "Nähen", "Französisch Stufe 1". Die Sozis halten in Lino fest,
  welcher Kunde wann welchen test de niveau bestanden hat.  Frage:
  Will Eupen das auch? Und wie sollen wir es nennen?

- Wer darf auf den Button "zur Hauptadresse machen" klicken?

- Brauchen wir wirklich die besprochene Tabelle der EiEi-Beträge
  (Kategorie, Seit wann, Betrag) ?

- AMK-Bescheinigungen

- Welche Angaben aus PXS fehlen noch im Detail-Fenster 
  von Empfang-->Klienten? (mit Monika klären)

    - `Krankenkasse` und `Vollmacht` : Leute, bei denen
      Medikamentenkosten vorgestreckt wurden, müssen eine Vollmacht
      unterschreiben, damit das ÖSHZ sein Geld bei der Krankenkasse
      zurückfordern kann.
 
    - Medizinische Hilfe (Art (Hausarzt / Spezialist), (x) dringend, 
      Eigentlich sind diese Felder nur eine "Vorschau" der GH-Historik.
      Können raus.
     
    - Generika, Mietgarantie, MAF, Referenzadresse:
      werden scheinbar nicht mehr benutzt.

    - Sozialhilfekonto

    - Wann ist die letzte Bescheinigung "Lebensmittelbank" (oder
      "Kleiderkammer") rausgegangen?  Manche Bescheinigungsarten
      dürfen frühestens nach 6 Monaten verlängert werden.

    - Bemerkungen, Notizen (freies Textfeld. wichtig.)

- Kann ein Klient eigentlich auf zwei Agenten zugleich warten? 
  Soll Lino das verhindern? 

- Konfigurierbare Historik:
  Historik als virtuelle Tabelle, die ihre "Chronik-Einträge" aus
  diversen Quellen zusammensucht:
  history.HistoricEvents.add(name,model,field)

  Rückfragen: Bitte genauer definieren, welchen Zweck diese Tabelle
  erfüllen soll.  Ich habe notiert "Wann war ein Klient das letzte Mal
  da? Was ist alles passiert?", aber das reicht mir nicht. Bitte ein
  konkretes Beispiel beschreiben. 


Done
-------

- Siehe Änderungen Version 1.1.11 bzw. 1.1.12 in :ref:`welfare.changes`.

- "Beziehungen" sind jetzt etwas anders strukturiert.  Erstens braucht
  man jetzt nicht mehr jedes Kind als Klient zu erfassen. Wenn man nur
  Namen, Geschlecht und Geburtsdatum wissen will, dann reicht ein
  Eintrag direkt in der Tabelle.  Das hat aber einen Nachteil (der
  vielleicht gar keiner ist): Beziehungen sind jetzt nicht mehr
  symmetrisch (bzw. bidirektional), sondern "gerichtet"
  bzw. hierarchisch. D.h. wenn man bei einem Klienten eingibt, dass er
  mit einem anderen Klienten verheiratet ist, dann sieht man das nicht
  automatisch auch von diesem anderen Klienten aus.

- bug fixed: Wenn man als Rolf in "Termin machen mit"
  (CoachingsByClient) auf den Kalender klickt ("Termin finden") und
  dann im Kalender für Hubert einen Termin mit Robin Dubois macht,
  dann wird der Termin erstellt, später verschwindet er wieder.

- eid-Karte einlesen : funktioniert momentan mit :ref:`eidreader`.
  Die Idee, dass wir :ref:`davlink` und :ref:`eidreader` als Browser
  extension implementieren müssen, erwies sich als unnötig.

- Bescheinigungen können jetzt mit einem Klick rauskommen. 
  (wenn beide Felder skip_dialog und primary angekreuzt sind)

- Uhrzeiten "von" und "bis" einer visite (prompt calendar event) wird
  jetzt automatisch ausgefüllt :

    - Beginn = bei Empfang des ersten Gastes (receive)
    - Ende = wenn der (erste) Gast geht (checkout)



Pages referring to this
-----------------------

.. refstothis::
