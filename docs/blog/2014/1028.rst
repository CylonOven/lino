=========================
Tuesday, October 28, 2014
=========================


Getting started as a Lino developer
=====================================

Continued on :doc:`yesterday's <1027>` changes and checked in.

Opened ticket :doc:`/tickets/138`.

In a consultation with :ref:`mw`, we decided to add django-iban_ and
xlwt_ to `install_requires` and bs4_ to `tests_require` (in Lino's
:xfile:`setup_info.py`).

Yes, this is annoying for people who don't use the apps who require
them (:mod:`lino.modlib.iban` requires django-iban_,
:mod:`lino.modlib.export_excel` requires xlwt_, and some tested docs
need bs4_).

But it is even more annoying for these people when the test suite
fails because these packages are not installed.  So currently Lino
depends on these packages, and :doc:`/tickets/139` opens discussion
about how to solve this dependency.


.. _django-iban: https://github.com/benkonrath/django-iban
.. _xlwt: http://www.python-excel.org/
.. _bs4: http://www.crummy.com/software/BeautifulSoup/bs4/doc/


Kostenübernahme Kleidung
=========================

Die neue Bescheinigung :xfile:`clothing_bank.body.html`
(:doc:`/tickets/136`) hat begeistertes Lob bekommen, und unsere
Großbaustelle :doc:`tickets/93` kommt langsam in die Zielgerade.  Nur
noch ein paar "Kleinigkeiten".

DONE:

- Kinder kriegen 10€, nicht 18€

- Datumsformat (oben rechts und generell im Text) mit vierstelligem
  Jahr (`dd.mm.yyyy` statt `dd.mm.yy`).
  --> This was trivial: simply replace the calls to `fds` by `fdm`.

TODO:

- "U. Zeichen : X/Y/Z" : Das "U. Zeichen" in Arial (sans serif), aber
  "X/Y/Z" in Roman.

  This is not trivial. I asked for help from 
  the `appy forum <https://answers.launchpad.net/appy/+question/256313>`_:

    When using the "do text from xhtml()" clause, I want to get
    certain parts of a paragraph in a different font (e.g. Times Roman
    while the default font is Arial).

    The `documentation
    <http://www.appyframework.org/podWritingAdvancedTemplates.html>`_
    says:

    pod uses the styles found in the pod template and tries to make a
    correspondence between style information in the XHTML chunk and
    styles present in the pod template. By default, when pod
    encounters a XHTML element: * it checks if a "class" attribute is
    defined on this element. If yes, and if a style with the same
    "display name" is found in the OpenDocument template, this style
    will be used. The "display name" of an OpenDocument style is the
    name of the style as it appears in OpenOffice, for example;

    Now I tried the following::

      <p class="MyStyle">Foo <font class="VariableText">bar</font></p>

    on a template with a paragraph style named "MyStyle" and a
    Character style named "VariableText".  The paragraph style is
    being applied, but the character style not.

    What am I doing wrong?

TODO (gemeinsam):

- Faltmarkierung am linken Seitenrand

- "Dexia" ersetzen durch "Belfius".

- Datum : oben rechts: simply replace the calls to `fds` by `fdm`.

  

