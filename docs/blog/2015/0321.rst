========================
Saturday, March 21, 2015
========================

Added a setting :attr:`responsible_user
<lino.modlib.plausibility.Plugin.responsible_user>` for
:mod:`lino.modlib.plausibility`. Example of local configuration::

    class Site(Site):

        def setup_plugins(self):
            super(Site, self).setup_plugins()
            self.plugins.plausibility.configure(responsible_user='annabell')

Added a new checker
:class:`lino.modlib.countries.models.PlaceChecker`, the first checker
in standard Lino.


Integrate repairable problems into plausibility
===============================================

Cool. Sometimes growing means to *reduce* the number of code
line. This is an example.  I integrate the `lino.mixins.repairable`
module into :mod:lino.modlib.plausible`.  Instead of writing a
`get_repairable_problems` methods, we write Checkers.  And the
:meth:`get_checker_problems method
<lino.modlib.plausible.choicelists.Checker.get_checker_problems>`
method must yield tuples instead of simple strings.  And the
:class:`Problem <lino.modlib.plausible.models.Problem>` model has 
a new field
:class:`repairable <lino.modlib.plausible.models.Problem.repairable>`.




TODO: 

- Why is the `detail_layout` of `Checkers` being ignored?

