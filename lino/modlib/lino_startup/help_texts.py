# -*- coding: UTF-8 -*-
# generated by lino.sphinxcontrib.help_text_builder
from __future__ import unicode_literals
from django.utils.translation import ugettext_lazy as _
help_texts = {
    'lino.core.site.Site.keep_erroneous_cache_files' : _("""When some exception occurs during
lino.core.kernel.Kernel.make_cache_file(), Lino usually
removes the partly generated file to make sure that it will try to
generate it again (and report the same error message) for every
subsequent next request."""),
    'lino.core.actors.Actor.abstract' : _("""Set this to True to prevent Lino from generating useless
JavaScript if this is just an abstract base class to be inherited
by other actors."""),
    'lino.modlib.extjs.ext_renderer.ExtRenderer' : _("""An HTML renderer that uses the ExtJS Javascript toolkit."""),
    'lino.core.roles.UserRole' : _("""Base class for all user roles. Even anonymous users have this
role."""),
    'lino.core.site.Site.webdav_root' : _("""The path on server to store webdav files.
Default is cache_dir + Â´/media/webdav'."""),
    'lino.mixins.duplicable.Duplicable' : _("""Adds a row action "Duplicate" which duplicates (creates a clone
of) the object it was called on."""),
    'lino.core.permissions.Permittable' : _("""Base class for objects that have view permissions control.
Inherited by lino.core.actions.Action,
lino.utils.jsgen.VisibleComponent and
lino.core.actors.Actor (though the latter is a special
case since actors never get instantiated)."""),
    'lino.core.actions.Action.show_in_workflow' : _("""Used internally.  Whether this action should be displayed as the
workflow_buttons
column. If this is True, then Lino will automatically set
custom_handler to True."""),
    'lino.core.choicelists.ChoiceListField.choices' : _("""HACK: Django by default stores a copy of our list when the
choices of a field are evaluated for the first time. We
don't want that because ChoiceLists may change afterwards."""),
    'lino.modlib.users.models.Authority' : _("""An Authority is when a User gives another User the right to "represent him" """),
    'lino.modlib.changes.models.Changes.model' : _("""alias of Change"""),
    'lino.modlib.printing.mixins.Printable' : _("""Mixin for models whose instances have a "print" action (i.e. for
which Lino can generate a printable document)."""),
    'lino.modlib.users.models.User.authenticated' : _("""This is always True.
See also lino.modlib.users.utils.AnonymousUser.authenticated."""),
    'lino.modlib.gfks.models.ContentTypes.base_classes' : _("""Display a clickable list of all MTI parents, i.e. base models"""),
    'lino.sphinxcontrib.actordoc.CurrentProject' : _("""Tell Sphinx to switch to the specified project until the end of
this document."""),
    'lino.core.workflows.Workflow.item_class' : _("""alias of State"""),
    'lino.core.actions.Action.parameters' : _("""See Parametrizable.parameters."""),
    'lino.core.site.Site.time_format_strftime' : _("""Format (in strftime syntax) to use for displaying dates to the user.
If you change this setting, you also need to override parse_time()."""),
    'lino.modlib.extjs.elems.GridColumn' : _("""The component that generates the JS of a grid column."""),
    'lino.core.layouts.DummyPanel' : _("""A layout panel which does not exist in the current configuration
but might exist as a real panel in some other configuration."""),
    'lino.utils.dpy.FlushDeferredObjects' : _("""Indicator class object.
Fixture may yield a FlushDeferredObjects
to indicate that all deferred objects should get saved before going on."""),
    'lino.core.choicelists.MultiChoiceListField' : _("""A field whose value is a list of Choice instances.
Stored in the database as a CharField using a delimiter character."""),
    'lino.core.plugin.Plugin.verbose_name' : _("""The verbose name of this plugin, as shown to the user.  This can be
a lazily translated string."""),
    'lino.core.actions.Action.defining_actor' : _("""Internally used to store the lino.core.actors.Actor who
defined this action."""),
    'lino.core.fields.RichTextField' : _("""Like Django's models.TextField, but you can specify a keyword
argument textfield_format."""),
    'lino.utils.restify.HTMLTranslator' : _("""Suppress surrounding DIV tag. Used by restify()."""),
    'lino.modlib.bootstrap3.renderer.Renderer' : _("""A  HTML render that uses Bootstrap3."""),
    'lino.modlib.bootstrap3.views.Index' : _("""Render the main page."""),
    'lino.core.site.LanguageInfo.index' : _("""Alias for field number 2"""),
    'lino.modlib.printing.actions.ClearCacheAction' : _("""Defines the Clear cache button on a Printable record."""),
    'lino.modlib.plausibility.models.FixProblemsByController' : _("""Update plausibility problems, repairing those which are
automatically fixable."""),
    'lino.modlib.system.models.SiteConfigs.model' : _("""alias of SiteConfig"""),
    'lino.modlib.gfks.fields.GenericForeignKeyIdField' : _("""Use this instead of models.PositiveIntegerField for fields that
are part of a GFK and you want Lino to render them using a
Combobox."""),
    'lino.core.dbtables.Table.screenshot_profiles' : _("""The user profile(s) for which we want a screenshot of this table."""),
    'lino.core.requests.ValidActionResponses.alert' : _("""True to specify that the message is rather important
and should alert and should be presented in a dialog box to be
confirmed by the user."""),
    'lino.utils.code.SourceFile' : _("""Counts the number of code lines in a given Python source file."""),
    'lino.modlib.uploads.models.Upload.file' : _("""Pointer to the uploaded file. See
lino.mixins.uploadable.Uploadable.file"""),
    'lino.core.actors.Actor.title' : _("""The text to appear e.g. as window title when the actor's default
action has been called.  If this is not set, Lino will use the
label as title."""),
    'lino.utils.media.MediaFile.name' : _("""return the filename on the server"""),
    'lino.modlib.plausibility.models.Problem.message' : _("""The message text. This is a concatenation of all messages that
were yeld by the checker."""),
    'lino.core.site.Site.uppercase_last_name' : _("""Whether last name of persons should (by default) be printed with
uppercase letters.  See lino.test_apps.human"""),
    'lino.core.requests.ValidActionResponses.warning_message' : _("""deprecated"""),
    'lino.modlib.tinymce.Plugin.window_buttons3' : _("""The third row of toolbar buttons when editing in own window."""),
    'lino.modlib.tinymce.Plugin.window_buttons2' : _("""The second row of toolbar buttons when editing in own window."""),
    'lino.modlib.tinymce.Plugin.window_buttons1' : _("""The first row of toolbar buttons when editing in own window."""),
    'lino.core.tables.AbstractTable.extra' : _("""Examples:"""),
    'lino.utils.xmlgen.cbss.IdentifyPersonRequest' : _("""A request for identifying a person or validating a person's identity"""),
    'lino.modlib.changes.models.Change.master' : _("""The database object which acts as "master"."""),
    'lino.utils.ajax.AjaxExceptionResponse' : _("""The middleware class definition."""),
    'lino.core.site.Site.show_internal_field_names' : _("""Whether the internal field names should be visible.  ExtUI
implements this by prepending them to the tooltip, which means
that use_quicktips must also be True.  Default is
True."""),
    'lino.utils.jsgen.js_code' : _("""A string that py2js will represent as is, not between quotes."""),
    'lino.modlib.notify.Plugin' : _("""See lino.core.plugin.Plugin."""),
    'lino.modlib.system.models.SiteConfig.simulate_today' : _("""A constant user-defined date to be substituted as current
system date."""),
    'lino.core.utils.UnresolvedField' : _("""Returned by resolve_field() if the specified field doesn't exist.
This case happens when sphinx autodoc tries to import a module.
See ticket docs/tickets/4."""),
    'lino.core.fields.MonthField' : _("""A DateField that uses a MonthPicker instead of a normal DateWidget"""),
    'lino.modlib.printing.choicelists.PisaBuildMethod' : _("""Generates .pdf files from .html templates.
Requires pisa.
Usage example see Printing using Pisa."""),
    'lino.core.site.Site.strict_choicelist_values' : _("""Whether invalid values in a ChoiceList should raise an exception."""),
    'lino.modlib.plausibility.models.Problem' : _("""Represents a detected plausibility problem."""),
    'lino.modlib.notify.models.Notification' : _("""A notification object represents the fact that a given user has
been notified about a given database object."""),
    'lino.modlib.weasyprint.choicelists.WeasyHtmlBuildMethod' : _("""Renders the input template and returns the unmodified output as
plain HTML."""),
    'lino.core.tables.AbstractTable.group_by' : _("""A list of field names that define the groups of rows in this table.
Each group can have her own header and/or total lines."""),
    'lino.utils.dpy.DpyLoader' : _("""Instantiated by restore.py."""),
    'lino.modlib.notify.models.Notifications' : _("""Base for all tables of notifications."""),
    'lino.core.site.Site.trusted_templates' : _("""Set this to True if you are sure that the users of your site won't try to
misuse Jinja's capabilities."""),
    'lino.modlib.uploads.choicelists.Shortcuts.item_class' : _("""alias of Shortcut"""),
    'lino.core.actions.CreateRow' : _("""Called when user edited a cell of a phantom record in a grid."""),
    'lino.mixins.periods.ObservedPeriod' : _("""lino.core.param_panel.ParameterPanel with two fields
start_date and end_date which default to empty."""),
    'lino.mixins.Referrable.ref' : _("""The reference. This must be either empty or unique."""),
    'lino.core.site.Site.use_experimental_features' : _("""Whether to include "experimental features"."""),
    'lino.modlib.uploads.models.MyUploads' : _("""Shows only my Uploads (i.e. those whose author is current user)."""),
    'lino.core.auth.LDAPAuthMiddleware' : _("""Middleware automatically installed by 
get_middleware_classes
when"""),
    'lino.modlib.system.Plugin' : _("""See Introduction to plugins."""),
    'lino.core.fields.QuantityField' : _("""A field that accepts Quantity, Percentage and Duration values."""),
    'lino.core.plugin.Plugin.needs_plugins' : _("""A list of names of plugins on which this plugin depends."""),
    'lino.api.doctest.HttpQuery.expected_rows' : _("""Alias for field number 3"""),
    'lino.core.tables.AbstractTable.show_detail_navigator' : _("""Whether a Detail view on a row of this table should have a navigator."""),
    'lino.mixins.uploadable.Uploadable' : _("""Mixin for objects that represent an uploadable file."""),
    'lino.mixins.dupable.PhoneticWordBase' : _("""Base class for the table of phonetic words of a given dupable
model. For every (non-abstract) dupable model there must be a
subclass of PhoneticWordBase.
The subclass must define a field
owner which points to the Dupable, and the Dupable's
dupable_word_model must point to its subclass
of PhoneticWordBase."""),
    'lino.core.site.Site.readonly' : _("""Setting this to True turns this site in a readonly site.  This
means that DATABASES must point to the
DATABASES of some other (non-readonly) site, and that
initdb will do nothing."""),
    'lino.core.site.Site.config_id' : _("""The primary key of the one and only
SiteConfig instance
of this Site. Default value is 1."""),
    'lino.core.fields.DisplayField' : _("""A field to be rendered like a normal read-only form field, but with
plain HTML instead of an <input> tag."""),
    'lino.modlib.system.models.SiteConfig.default_build_method' : _("""The default build method to use when rendering printable documents."""),
    'lino.core.utils.ChangeWatcher.original_state' : _("""a dict containing (fieldname --> value) before the change."""),
    'lino.core.actions.ShowDetailAction' : _("""Open the detail window on a row of this table."""),
    'lino.mixins.Referrable' : _("""Mixin for things that have a unique ref field and a
get_by_ref method."""),
    'lino.modlib.tinymce.Plugin.field_buttons' : _("""The toolbar buttons when editing a field inside a detail form."""),
    'lino.core.site.Site.date_format_extjs' : _("""Format (in ExtJS syntax) to use for displaying dates to the user.
If you change this setting, you also need to override parse_date()."""),
    'lino.core.site.Site.appy_params' : _("""Used by lino.mixins.printable.AppyBuildMethod."""),
    'lino.core.site.LanguageInfo.django_code' : _("""Alias for field number 0"""),
    'lino.modlib.printing.choicelists.DjangoBuildMethod' : _("""Using Django's templating engine."""),
    'lino.modlib.printing.actions.CachedPrintAction' : _("""A print action which uses a cache for the generated printable
document and builds is only when it doesn't yet exist."""),
    'lino.modlib.users.choicelists.UserProfile.role' : _("""The role of users having this profile. This is an instance of
<lino.core.roles.UserRole> or some subclass thereof."""),
    'lino.core.plugin.Plugin.renderer' : _("""The renderer used by this plugin. See Introduction to User Interface Renderers."""),
    'lino.modlib.uploads.models.Upload.description_link' : _("""Almost the same as description, but if file is
not empty, the text is clickable, and clicking on it opens the
uploaded file in a new browser window."""),
    'lino.modlib.plausibility.models.Problem.user' : _("""The user reponsible
for fixing this problem."""),
    'lino.modlib.changes.Plugin' : _("""See Introduction to plugins."""),
    'lino.core.tables.AbstractTable.variable_row_height' : _("""Set this to True if you want each row to get the height that it
needs."""),
    'lino.core.fields.ImportedFields' : _("""Model mixin to easily declare "imported fields"."""),
    'lino.modlib.system.choicelists.PeriodEvents' : _("""The list of things you can observe on a
lino.mixins.periods.DatePeriod."""),
    'lino.modlib.extjs.elems.SlaveSummaryPanel' : _("""The panel used to display a slave table whose slave_grid_format
is 'summary'."""),
    'lino.utils.diag.Analyzer' : _("""The class of the lino.utils.diag.analyzer object."""),
    'lino.modlib.extjs.elems.GridElement' : _("""Represents a Lino.GridPanel, i.e. the widget used to represent a
table or a slave table."""),
    'lino.modlib.uploads.models.Uploads' : _("""Shows all Uploads"""),
    'lino.core.model.Model.preferred_foreignkey_width' : _("""The default preferred width (in characters) of widgets that
display a ForeignKey to this model."""),
    'lino.core.site.Site.project_name' : _("""A nickname for this project. This is used to set cache_dir
and therefore should be unique for all Lino projects on a given
machine."""),
    'lino.modlib.tinymce.Plugin' : _("""See Introduction to plugins."""),
    'lino.modlib.summaries.mixins.Summary' : _("""Base class for all "summary data" models."""),
    'lino.core.merge.MergePlan' : _("""A volatile object which represents what is going to happen after
the user confirms to merge two objects."""),
    'lino.modlib.uploads.models.Uploads.model' : _("""alias of Upload"""),
    'lino.core.site.Site.user_model' : _("""If lino.modlib.users is installed, this holds a reference to
the model class which represents a user of the system. Default
value is None, meaning that this application has no user
management.  See also set_user_model()"""),
    'lino.core.actors.Actor.required_roles' : _("""See lino.core.permissions.Permittable.required_roles"""),
    'lino.core.site.Site.jasmine_root' : _("""Path to the Jasmine root directory.  Only used on a development
server if the media directory has no symbolic link to the
Jasmine root directory and only if use_jasmine is True."""),
    'lino.utils.addressable.Addressable' : _("""Mixin to encapsulate the generating of "traditional" ("snail") mail
addresses."""),
    'lino.core.fields.HtmlBox' : _("""Like DisplayField, but to be rendered as a panel rather
than as a form field."""),
    'lino.core.site.Site.use_eid_applet' : _("""Whether to include functionality to read Belgian id cards using
the official eid-applet.
This option is experimental and doesn't yet work.  See
/blog/2012/1105."""),
    'lino.core.site.Site.remote_user_header' : _("""The name of the header (set by the web server) that Lino should
consult for finding the user of a request.  The default value
None means that http authentication is not used.  Apache's
default value is "REMOTE_USER"."""),
    'lino.modlib.plausibility.Plugin' : _("""See Introduction to plugins."""),
    'lino.api.rt.plugins' : _("""Shortcut to lino.core.site.Site.plugins"""),
    'lino.modlib.printing.choicelists.LatexBuildMethod' : _("""Generates .pdf files from .tex templates.
Not actively used."""),
    'lino.modlib.extjs.Plugin.use_statusbar' : _("""Whether to use a status bar to display certain messages to the user.
Default is False since currently this is not really useful."""),
    'lino.core.fields.VirtualField' : _("""Represents a virtual field. Virtual fields are not stored in the
database, but computed each time they are read. Django doesn't see
them."""),
    'lino.utils.media.MediaFile.url' : _("""return the url that points to file on the server"""),
    'lino.modlib.uploads.choicelists.Shortcuts' : _("""The list of upload shortcut fields which have been declared on this
Site.  See add_shortcut()."""),
    'lino.core.frames.Frame' : _("""Base clase for actors which open a window but, but this window is
neither a database table nor a detail form."""),
    'lino.modlib.users.mixins.TimezoneHolder.timezone' : _("""The timezone."""),
    'lino.core.tables.AbstractTable.typo_check' : _("""True means that Lino shoud issue a warning if a subclass
defines any attribute that did not exist in the base class.
Usually such a warning means that there is something wrong."""),
    'lino.modlib.extjs.elems.ActionParamsPanel' : _("""The optional Panel for parameters of an Action."""),
    'lino.utils.test.HttpQuery.url_base' : _("""Alias for field number 1"""),
    'lino.modlib.changes.models.Changes' : _("""The default table for Change."""),
    'lino.utils.instantiator.Instantiator' : _("""A utility class to make python fixtures more compact. See
The Instantiator class."""),
    'lino.modlib.extjs.elems.ParamsPanel' : _("""The optional Panel for parameters of a Table.
JS part stored in Lino.GridPanel.params_panel."""),
    'lino.utils.test.HttpQuery.username' : _("""Alias for field number 0"""),
    'lino.core.tables.AbstractTable.hide_zero_rows' : _("""Set this to True if you want to remove rows which contain no
values when rendering this table as plain HTML.  This is ignored
when rendered as ExtJS."""),
    'lino.core.actions.SubmitDetail' : _("""The "Save" button of a detail window."""),
    'lino.modlib.uploads.models.MyUploads.model' : _("""alias of Upload"""),
    'lino.core.site.Site.confdirs' : _("""This attribute is available only after site startup.  See
lino.utils.config."""),
    'lino.core.requests.ValidActionResponses.record_id' : _("""When an action returns a record_id, it asks the user interface to
jump to the given record."""),
    'lino.modlib.users.utils.AnonymousUser.authenticated' : _("""This is always False.
See also lino.modlib.users.models.User.authenticated."""),
    'lino.core.site.Site.use_java' : _("""A site-wide option to disable everything that needs Java.  Note that
it is up to the apps which include Java applications to respect this
setting. Usage example is lino_xl.lib.beid."""),
    'lino.utils.addressable.TestAddress' : _("""Used only for testing."""),
    'lino.core.dbtables.Table.handle_uploaded_files' : _("""Handler for uploaded files.
Same remarks as for lino.core.actors.Actor.disabled_fields."""),
    'lino.core.fields.DummyField' : _("""Represents a field that doesn't exist in the current configuration
but might exist in other configurations. The "value" of a
DummyField is always None."""),
    'lino.modlib.gfks.mixins.Controllable.controller_is_optional' : _("""Deprecated. This is (and always was) being ignored. Use
update_controller_field() instead."""),
    'lino.mixins.polymorphic.Polymorphic.mti_navigator' : _("""A virtual field which defines buttons for switching between the
different views."""),
    'lino.modlib.jinja.loader.DjangoJinjaTemplate' : _("""used e.g. to render /lino/lino/config/500.html"""),
    'lino.core.site.Site.workflows_module' : _("""The full Python path of the workflows module to be used on
this site."""),
    'lino.modlib.extjs.elems.FieldElement' : _("""Base class for all Widgets on some filed-like data element."""),
    'lino.modlib.users.models.UsersOverview.model' : _("""alias of User"""),
    'lino.core.layouts.Panel' : _("""This is available in lino.api.dd.  To be used when a panel
is more complex than what can be expressed using a simple template
string."""),
    'lino.core.actors.Actor.editable' : _("""Set this explicitly to True or False to make the whole table
editable or not.  Otherwise Lino will guess what you want during
startup and set it to False if the actor is a Table and has a
get_data_rows method (which usually means that it is a virtual
table), otherwise to True."""),
    'lino.core.site.Site.time_format_extjs' : _("""Format (in ExtJS syntax) to use for displaying dates to the user.
If you change this setting, you also need to override parse_time()."""),
    'lino.modlib.extjs.Plugin.media_name' : _("""The URL from where to include the ExtJS library files."""),
    'lino.core.tables.AbstractTable.start_at_bottom' : _("""Set this to True if you want your table to start at the
bottom.  Unlike reverse ordering, the rows remain in their
natural order, but when we open a grid on this table, we want it
to start on the last page."""),
    'lino.mixins.dupable.Dupable.dupable_words_field' : _("""The name of a CharField on this model which holds the full-text
description that is being tested for duplicates."""),
    'lino.core.site.Site.modules' : _("""Old name for models.  Deprecated."""),
    'lino.utils.addressable.Addressable.address_html' : _("""A property which calls get_address_html()."""),
    'lino.mixins.human.Human.last_name' : _("""The last name, also known as family name."""),
    'lino.modlib.users.utils.AnonymousUser' : _("""A singleton class whose instance will be assigned to the
user attribute of anonymous incoming requests, similar to
Django's approach."""),
    'lino.core.requests.ActorRequest' : _("""Base for ActionRequest, but also used directly by
lino.core.kernel.Kernel.run_callback()."""),
    'lino.core.site.Site.LANGUAGE_CHOICES' : _("""A tuple in the format expected by Django's choices
attribute, used e.g. by LanguageField. It's content is
automatically populated from languages and application
code should not change it's value."""),
    'lino.modlib.uploads.models.UploadType.shortcut' : _("""Optional pointer to a virtual upload shortcut field.  If
this is not empty, then the given shortcut field will manage
uploads of this type.  See also Shortcuts."""),
    'lino.core.fields.FakeField' : _("""Base class for RemoteField and DisplayField."""),
    'lino.core.site.Site.auto_configure_logger_names' : _("""A string with a space-separated list of logger names to be
automatically configured. See setup_logging()."""),
    'lino.utils.odsreader.OdsReader' : _("""Like SimpleOdsReader, but each row is converted to 
an lino.utils.AttrDict. This requires you to specifiy, 
besides the SimpleOdsReader.headers attrribute, 
another list of pure ASCII strings which must be valid Python 
attribute names."""),
    'lino.modlib.users.choicelists.UserProfiles' : _("""The list of user profiles available on this site."""),
    'lino.core.choicelists.ChoiceList' : _("""User-defined choice lists must inherit from this base class."""),
    'lino.core.actions.Action.extjs_main_panel' : _("""Used by lino_xl.lib.extensible and
lino.modlib.awesome_uploader."""),
    'lino.core.site.Site.obj2text_template' : _("""The format template to use when rendering a ForeignKey as plain
text."""),
    'lino.core.auth.SessionUserMiddleware' : _("""Middleware automatically installed by
get_middleware_classes when
remote_user_header is None and user_model
not."""),
    'lino.modlib.summaries.Plugin.start_year' : _("""The first year for which summaries should be computed."""),
    'lino.core.choicelists.Choice.name' : _("""A string to be used as attribute name on the choicelist for
referring to this choice from application code."""),
    'lino.utils.test.DemoTestCase' : _("""Used to define tests that are to be run directly in the demo
database, without using the Django test runner (i.e. without
creating a temporary test database)."""),
    'lino.mixins.sequenced.DuplicateSequenced' : _("""Duplicate this row."""),
    'lino.core.fields.DurationField' : _("""A field that stores Duration values as CHAR."""),
    'lino.core.tables.AbstractTable.get_data_rows' : _("""Virtual tables must define this method, normal (model-based)
tables may define it."""),
    'lino.core.requests.BaseRequest.request' : _("""The incoming Django HttpRequest object which caused this action
request."""),
    'lino.core.plugin.Plugin.media_name' : _("""Either None (default) or a non-empty string with the name of the
subdirectory of your media directory which is expected to
contain media files for this app."""),
    'lino.mixins.dupable.DupableChecker.model' : _("""alias of Dupable"""),
    'lino.core.actions.Action.hide_top_toolbar' : _("""Used internally if opens_a_window to say whether the
window has a top toolbar."""),
    'lino.core.requests.ValidActionResponses.message' : _("""a string with a message to be shown to the user."""),
    'lino.core.site.Site.override_modlib_models' : _("""A dictionary which maps model class names to the plugin which
overrides them."""),
    'lino.modlib.users.mixins.UserAuthored.user' : _("""The author of this object.
A pointer to lino.modlib.users.models.User."""),
    'lino.modlib.summaries.Plugin.end_year' : _("""The last year for which summaries should be computed."""),
    'lino.mixins.dupable.CheckedSubmitInsert' : _("""Like the standard lino.core.actions.SubmitInsert, but adds
a confirmation if there is a possible duplicate record."""),
    'lino.core.store.AutoStoreField' : _("""A StoreField for 
AutoField"""),
    'lino.core.site.Site.propvalue_max_length' : _("""Used by lino_xl.lib.properties."""),
    'lino.utils.xmlgen.cbss.HealthInsuranceRequest' : _("""A request to the HealthInsurance BCSS service.
Net yet used in practice."""),
    'lino.core.auth.NoUserMiddleware' : _("""Middleware automatically installed by
lino.core.site.Site.get_middleware_classes() when
lino.core.site.Site.user_model is None."""),
    'lino.modlib.export_excel.Plugin' : _("""See Introduction to plugins."""),
    'lino.mixins.Referrable.ref_max_length' : _("""The maximum length of the ref field."""),
    'lino.modlib.users.models.User' : _("""Represents a user of this site."""),
    'lino.modlib.uploads.models.UploadType' : _("""The type of an upload."""),
    'lino.modlib.extjs.views.Restful' : _("""Used to collaborate with a restful Ext.data.Store."""),
    'lino.mixins.sequenced.MoveDown' : _("""Move current row one downwards. This action is available on any
Sequenced object as Sequenced.move_down."""),
    'lino.modlib.print_pisa.Plugin' : _("""See Introduction to plugins."""),
    'lino.modlib.about.models.About' : _("""Display information about this web site.  This defines the window
which opens via the menu command Site â£ About."""),
    'lino.core.store.RelatedMixin' : _("""Common methods for ForeignKeyStoreField and
OneToOneField."""),
    'lino.core.model.Model.hidden_elements' : _("""If specified, this is the default value for
hidden_elements
of every Table on this model."""),
    'lino.core.site.Site.webdav_url' : _("""The URL prefix for webdav files.  In a normal production
configuration you should leave this to None, Lino will set a
default value "/media/webdav/", supposing that your Apache is
configured as described in WebDAV."""),
    'lino.core.site.Site.site_config_defaults' : _("""Default values to be used when creating the site_config."""),
    'lino.core.site.Site.installed_plugin_modules' : _("""A set of the full Python paths of all imported plugin modules. Not
just the plugin modules themselves but also those they inherit
from. This is used internally by is_abstract_model().  Don't
modify."""),
    'lino.utils.instantiator.ManyToManyConverter' : _("""Converter for ManyToMany fields."""),
    'lino.core.site.Site.the_demo_date' : _("""A hard-coded constant date to be used as reference by today()
and demo_date(). For example many demo databases have this
set because certain tests rely on a constant reference date."""),
    'lino.mixins.sequenced.Sequenced.move_buttons' : _("""Displays buttons for certain actions on this row:"""),
    'lino.utils.djangotest.TestCase' : _("""alias of RemoteAuthTestCase"""),
    'lino.core.actions.SaveRow' : _("""Called when user edited a cell of a non-phantom record in a grid.
Installed as update_action on every Actor."""),
    'lino.modlib.gfks.models.BrokenGFKs' : _("""Shows all database objects (model instances) who have a broken
GeneriForeignKey field."""),
    'lino.mixins.periods.Monthly' : _("""An ObservedPeriod which defaults to the current month."""),
    'lino.core.utils.UnresolvedModel' : _("""The object returned by resolve_model() if the specified model
is not installed."""),
    'lino.core.store.ComboStoreField' : _("""An atomizer for all kinds of fields which use a ComboBox."""),
    'lino.utils.sqllog.SQLLogMiddleware' : _("""Log all SQL statements direct to the console."""),
    'lino.core.kernel.Kernel' : _("""This is the class of the object stored in Site.kernel."""),
    'lino.mixins.dupable.DupableChecker' : _("""Checks for the following repairable problem:"""),
    'lino.modlib.comments.models.Comment.ALLOWED_TAGS' : _("""A list of tag names which are to remain in HTML comments if
bleaching is active."""),
    'lino.core.plugin.Plugin.media_base_url' : _("""Remote URL base for media files."""),
    'lino.core.site.Site.catch_layout_exceptions' : _("""Lino usually catches any exception during startup (in
create_layout_element) to report errors of
style "Unknown element "postings.PostingsByController
('postings')" referred in layout <PageDetail on pages.Pages>." """),
    'lino.utils.dbfreader.DBFFile' : _("""Represents a single DBF file."""),
    'lino.core.plugin.Plugin.disables_plugins' : _("""A list of strings with names of plugins to not install even
though they are yeld by get_installed_apps. This is applied as an
additional plugin filter even after get_apps_modifiers."""),
    'lino.modlib.uploads.Plugin' : _("""See Introduction to plugins."""),
    'lino.modlib.printing.mixins.Printable.do_print' : _("""The action used to print this object.
This is an instance of
DirectPrintAction or CachedPrintAction by
default.  And if lino_xl.lib.excerpts is installed,
then set_excerpts_actions possibly replaces
do_print by a
lino_xl.lib.excerpts.CreateExcerpt instance."""),
    'lino.core.site.Site.plugins' : _("""An AttrDict object with one entry for each installed
app, mapping the app_label of every plugin to the
corresponding lino.core.plugin.Plugin instance."""),
    'lino.utils.xmlgen.Namespace' : _("""An XML namespace.  Base class for
lino.utils.xmlgen.html.HtmlNamespace and the namespaces
defined in lino.utils.xmlgen.intervat."""),
    'lino.core.layouts.ParamsLayout' : _("""A Layout description for a table parameter panel."""),
    'lino.core.tables.AbstractTable.active_fields' : _("""A list of field names that are "active".
Value and inheritance as for hidden_columns."""),
    'lino.core.actions.Action.opens_a_window' : _("""Used internally to say whether this action opens a window."""),
    'lino.core.actions.Action.action_name' : _("""Internally used to store the name of this action within the
defining Actor's namespace."""),
    'lino.core.actions.Action.readonly' : _("""Whether this action is readonly, i.e. does not change any data."""),
    'lino.modlib.plausibility.models.UpdateProblemsByController' : _("""Updates the table of plausibility problems for a given database
object, also removing those messages which no longer exist. This
action does not change anything else in the database."""),
    'lino.core.actions.Action.button_text' : _("""The text to appear on buttons for this action. If this is not
defined, the label is used."""),
    'lino.core.site.Site.project_model' : _("""Optionally set this to the <applabel.ModelName> of a model used as
"central project" in your application.  Which concretely means that
certain other models like notes.Note, outbox.Mail, ... have an
additional ForeignKey to this model."""),
    'lino.core.site.Site.auto_fit_column_widths' : _("""The default value for the
auto_fit_column_widths
of tables in this application."""),
    'lino.core.model.Model.workflow_owner_field' : _("""If this is set on a Model, then it will be used as default value
for lino.core.table.Table.workflow_owner_field on all
tables based on this Model."""),
    'lino.utils.dates.DatePeriodValue.start_date' : _("""The start date"""),
    'lino.modlib.changes.models.ChangesByMaster' : _("""Slave Table showing the changes related to the current object,
including those applied to "child" objects."""),
    'lino.core.actions.Action.hide_navigator' : _("""Used internally if opens_a_window to say whether the
window has a navigator."""),
    'lino.core.requests.ValidActionResponses.detail_handler_name' : _("""The name of the detail handler to be used.  Application code should
not need to use this.  It is automatically set by
ActorRequest.goto_instance()."""),
    'lino.modlib.office.roles.OfficeStaff' : _("""A user who manages configuration of office functionality."""),
    'lino.modlib.extjs.views.Authenticate' : _("""This view is being used when remote_user_header is
empty (and user_model not).
lino.core.auth.SessionUserMiddleware"""),
    'lino.core.tables.AbstractTable.stay_in_grid' : _("""Set this to True if Lino should not open a newly created record in
a detail window."""),
    'lino.core.requests.ActionRequest' : _("""Holds information about an indivitual web request and provides
methods like"""),
    'lino.utils.sqllog.ShortSQLLogToConsoleMiddleware' : _("""Log a summary of the SQL statements made to the console.
Intended for use with the django development server."""),
    'lino.core.choicelists.ChoiceList.item_class' : _("""The class of items of this list."""),
    'lino.core.site.Site.loading_from_dump' : _("""Whether the process is currently loading data from a Python dump."""),
    'lino.core.model.Model' : _("""Lino adds a series of features to Django's Model
class.  If a Lino application includes plain Django Model
classes, Lino will "extend" these by adding the attributes and
methods defined here to these classes."""),
    'lino.core.choicelists.Choice.value' : _("""(a string) The value to use e.g. when this choice is being
stored in a database."""),
    'lino.core.tables.TableHandle' : _("""For every table we create one "handle" per renderer."""),
    'lino.core.menus.Menu' : _("""Represents a menu. A menu is conceptually a MenuItem
which contains other menu items."""),
    'lino.core.site.Site.django_admin_prefix' : _("""The prefix to use for Django admin URLs.
Leave this unchanged as long as docs/tickets/70 is not solved."""),
    'lino.core.permissions.Permittable.workflow_state_field' : _("""The name of the field that contains the workflow state of an
object.  Subclasses may override this."""),
    'lino.core.auth.RemoteUserMiddleware' : _("""Middleware automatically installed by get_middleware_classes when both
remote_user_header and
user_model are not
empty."""),
    'lino.modlib.extjs.elems.NumberFieldElement' : _("""Base class for integers, decimals, RequestField,..."""),
    'lino.core.tables.AbstractTable.row_height' : _("""Number of text rows per data row."""),
    'lino.utils.instantiator.InstanceGenerator' : _("""Usage example see lino_xl.lib.humanlinks.fixtures."""),
    'lino.modlib.users.models.User.person' : _("""A virtual read-only field which returns the Person MTI child corresponding
to the partner (if it exists) and otherwise None."""),
    'lino.utils.addressable.Addressable.address' : _("""A property which calls get_address()."""),
    'lino.core.layouts.ActionParamsLayout' : _("""A Layout description for an action parameter panel."""),
    'lino.core.boundaction.BoundAction' : _("""An Action which is bound to an Actor.  If an Actor has subclasses,
each subclass "inherits" its actions."""),
    'lino.modlib.users.mixins.AutoUser' : _("""alias of UserAuthored"""),
    'lino.core.actors.Actor.button_text' : _("""The text to appear on buttons of a ShowSlaveTable action for this
actor."""),
    'lino.core.menus.Menu.avoid_lonely_items' : _("""If set to True, avoid lonely menu items by lifting them up one level.
This is not done for top-level menus"""),
    'lino.core.menus.Toolbar' : _("""A top-level Menu."""),
    'lino.core.model.Model.change_watcher_spec' : _("""Internally used by watch_changes()"""),
    'lino.modlib.printing.utils.CustomBuildMethod' : _("""For example CourseToXls."""),
    'lino.modlib.plausibility.models.ProblemsByChecker.master' : _("""alias of Checker"""),
    'lino.core.utils.Parametrizable' : _("""Base class for both Actors and Actions."""),
    'lino.core.tables.AbstractTable.preview_limit' : _("""The maximum number of rows to fetch when this table is being
displayed in "preview mode", i.e. (1) as a slave table in a detail
window or (2) as an item of the admin_main.html returned
by lino.core.site.Site.get_admin_main_items()."""),
    'lino.utils.xmlgen.cbss.PerformInvestigationRequest' : _("""A request to the PerformInvestigation BCSS service.
Net yet used in practice."""),
    'lino.core.tables.AbstractTable.cell_edit' : _("""True (default) to use ExtJS CellSelectionModel, False to use
RowSelectionModel.  When True, the users cannot select multiple
rows.  When False, the users cannot edit individual cells using
the F2 key.."""),
    'lino.mixins.sequenced.Sequenced.seqno' : _("""The sequence number of this item with its parent."""),
    'lino.core.site.Site.partners_app_label' : _("""Temporary setting, see Polymorphism."""),
    'lino.core.actors.Actor.sum_text_column' : _("""The index of the column which should hold the text to display on
the totals row (returned by get_sum_text())."""),
    'lino.modlib.plausibility.choicelists.Checkers.item_class' : _("""alias of Checker"""),
    'lino.core.actions.Action.no_params_window' : _("""Set this to True if your action has parameters but you
do not want it to open a window where the user can edit these
parameters before calling the action."""),
    'lino.core.choicelists.ChoiceList.preferred_foreignkey_width' : _("""Default preferred with for ChoiceList fields to this list."""),
    'lino.core.site.Site.date_format_strftime' : _("""Format (in strftime syntax) to use for displaying dates to the user.
If you change this setting, you also need to override parse_date()."""),
    'lino.utils.dbfreader.DBFField' : _("""Represents a field in a DBF file."""),
    'lino.core.requests.BaseRequest' : _("""Base class of all action requests."""),
    'lino.core.fields.DatePickerField' : _("""A DateField that uses a DatePicker instead of a normal DateWidget.
Doesn't yet work."""),
    'lino.modlib.changes.models.ChangeTypes' : _("""The list of possible choices for the type field
of a Change."""),
    'lino.core.actions.Action.help_text' : _("""A help text that shortly explains what this action does.
lino.modlib.extjs shows this as tooltip text."""),
    'lino.modlib.printing.actions.EditTemplate' : _("""Edit the print template, i.e. the file specified by
Printable.get_print_templates()."""),
    'lino.modlib.extjs.Plugin.autorefresh_seconds' : _("""Number of seconds to wait between two refreshes when autorefresh is
activated. Default is 60. Set this to 0 in order to deactivate
the autorefresh button."""),
    'lino.utils.odsreader.SimpleOdsReader' : _("""Abstract base class. For each .ods file you are probably creating a
subclass of this."""),
    'lino.core.store.StoreField' : _("""Base class for the fields of a Store."""),
    'lino.utils.ucsv.UnicodeWriter' : _("""A CSV writer which will write rows to CSV file "f",
which is encoded in the given encoding."""),
    'lino.core.plugin.Plugin.ui_handle_attr_name' : _("""Currently implemented by lino.modlib.extjs,
lino.modlib.bootstrap3."""),
    'lino.mixins.sequenced.Sequenced.move_up' : _("""Exchange the seqno of this item and the previous item."""),
    'lino.core.model.Model.active_fields' : _("""If specified, this is the default value for
active_fields
of every Table on this model."""),
    'lino.mixins.Created' : _("""Mixin for models which have a field created"""),
    'lino.modlib.users.choicelists.UserProfile' : _("""Base class for all user profiles."""),
    'lino.utils.ucsv.UTF8Recoder' : _("""Iterator that reads an encoded stream and reencodes the input to UTF-8"""),
    'lino.modlib.notify.mixins.ChangeObservable' : _("""An Observable which automatically emits notifications when
a database object is modified."""),
    'lino.core.roles.SiteStaff' : _("""A user who can configure site-wide functionality."""),
    'lino.core.site.Site.build_js_cache_on_startup' : _("""Whether the Javascript cache files should be built on startup for
all user profiles and languages."""),
    'lino.mixins.sequenced.Sequenced' : _("""Mixin for models that have a field seqno containing a
"sequence number"."""),
    'lino.core.utils.InstanceAction' : _("""Volatile object which wraps a given action to be run on a given
model instance."""),
    'lino.modlib.office.roles.OfficeOperator' : _("""A user who manages office functionality for other users (but not
for himself)."""),
    'lino.modlib.notify.models.Notifications.model' : _("""alias of Notification"""),
    'lino.mixins.dupable.Dupable' : _("""Base class for models that can be "dupable"."""),
    'lino.utils.xmlgen.cbss.WebServiceConnector' : _("""The WebServiceConnector namespace used for wrapping "classical" CBSS services."""),
    'lino.modlib.plausibility.models.Problems.model' : _("""alias of Problem"""),
    'lino.utils.choosers.Chooser' : _("""A chooser holds information about the possible choices of a
field."""),
    'lino.utils.htmlgen.TABLE' : _("""Renders as a simple table."""),
    'lino.utils.dpy.Serializer' : _("""Serializes a QuerySet to a py stream."""),
    'lino.modlib.plausibility.models.ProblemsByChecker' : _("""Show the plausibility problems by checker."""),
    'lino.core.actors.Actor.detail_html_template' : _("""The template to be used for rendering a row of this actor as a
detail html page."""),
    'lino.modlib.plausibility.models.AllProblems.model' : _("""alias of Problem"""),
    'lino.core.workflows.ChangeStateAction' : _("""This is the class used when generating automatic "state
actions". For each possible value of the Actor's
workflow_state_field there will be an automatic action
called mark_XXX"""),
    'lino.core.actors.Actor.sort_index' : _("""The sort_index to be
used when this table is being used by a ShowSlaveTable."""),
    'lino.mixins.dupable.SimilarObjects.master' : _("""alias of Model"""),
    'lino.modlib.gfks.models.HelpText' : _("""A custom help text to be displayed for a given field."""),
    'lino.modlib.plausibility.roles.PlausibilityUser' : _("""A user who can see plausibility problems."""),
    'lino.core.utils.ParameterPanel' : _("""A utility class for defining reusable definitions for
parameters."""),
    'lino.modlib.extjs.Plugin' : _("""Extends lino.core.plugin.Plugin."""),
    'lino.utils.dpy.DpyDeserializer' : _("""The Django deserializer for The Python serializer."""),
    'lino.modlib.comments.models.Comment.short_text' : _("""A short "abstract" of your comment. This should not be more
than one paragraph."""),
    'lino.utils.pythontest.TestCase.django_settings_module' : _("""The DJANGO_SETTINGS_MODULE to set for each subprocess
launched by this test case."""),
    'lino.modlib.system.choicelists.YesNo' : _("""A choicelist with two values "Yes" and "No"."""),
    'lino.core.model.Model.workflow_state_field' : _("""If this is set on a Model, then it will be used as default value
for
workflow_state_field
of all tables based on this Model."""),
    'lino.utils.sqllog.SQLLogToConsoleMiddleware' : _("""Log all SQL statements to the console.
Intended for use with the django development server."""),
    'lino.mixins.human.Human.first_name' : _("""The first name, also known as given name."""),
    'lino.modlib.users.choicelists.UserProfiles.item_class' : _("""alias of UserProfile"""),
    'lino.core.layouts.BaseLayout.window_size' : _("""A tuple (width, height) that specifies the size of the window to
be used for this layout."""),
    'lino.mixins.dupable.Dupable.submit_insert' : _("""A dupable model has its
submit_insert action
overridden by CheckedSubmitInsert, a extended variant of
the action which checks for duplicate rows and asks a user
confirmation when necessary."""),
    'lino.modlib.extjs.elems.DisplayElement' : _("""ExtJS element to be used for DisplayFields."""),
    'lino.core.store.StoreField.options' : _("""A dict with options to be used by as_js()."""),
    'lino.api.doctest.HttpQuery.username' : _("""Alias for field number 0"""),
    'lino.utils.instantiator.ChoiceConverter' : _("""Converter for ChoiceListField."""),
    'lino.modlib.about.Plugin' : _("""See Introduction to plugins."""),
    'lino.mixins.human.Human.gender' : _("""The sex of this person (male or female)."""),
    'lino.modlib.users.models.User.profile' : _("""The profile of a user is what defines her or his permissions."""),
    'lino.modlib.uploads.models.Upload.description' : _("""A short description entered manually by the user."""),
    'lino.core.actors.Actor.list_html_template' : _("""The template to be used for rendering a collection of rows of this
actor as a table html page."""),
    'lino.modlib.printing.choicelists.SimpleBuildMethod' : _("""Base for build methods which use Lino's templating system
(find_config_file)."""),
    'lino.core.plugin.Plugin.media_root' : _("""Local path where third-party media files are installed."""),
    'lino.core.actions.Action.icon_name' : _("""The class name of an icon to be used for this action when rendered
as toolbar button."""),
    'lino.core.layouts.FormLayout' : _("""Base class for layout descriptions of detail and insert windows."""),
    'lino.core.actions.Action.http_method' : _("""HTTP method to use when this action is called using an AJAX call."""),
    'lino.core.fields.RichTextField.textfield_format' : _("""Override the global
lino.core.site.Site.textfield_format setting."""),
    'lino.mixins.sequenced.Hierarchical' : _("""Abstract model mixin for things that have a "parent" and
"siblings"."""),
    'lino.core.permissions.Permittable.required_roles' : _("""A set of user roles required to view this actor or action."""),
    'lino.modlib.extjs.elems.IncompleteDateFieldElement' : _("""Widget for lino.core.fields.IncompleteDate fields."""),
    'lino.utils.test.DocTest' : _("""Looks for a file "index.rst" in your project_dir and (if it exists)
runs doctest on it."""),
    'lino.core.actions.Action.custom_handler' : _("""Whether this action is implemented as Javascript function call.
This is necessary if you want your action to be callable using an
"action link" (html button)."""),
    'lino.core.plugin.Plugin.site_js_snippets' : _("""List of js snippets to be injected into the lino_*.js file."""),
    'lino.core.actions.Action.combo_group' : _("""The name of another action to which to "attach" this action.
Both actions will then be rendered as a single combobutton."""),
    'lino.core.plugin.Plugin' : _("""The base class for all plugins."""),
    'lino.modlib.languages.Plugin' : _("""See Introduction to plugins."""),
    'lino.core.site.Site.log_each_action_request' : _("""Whether Lino should log every incoming request for non
readonly actions."""),
    'lino.core.store.DisabledFieldsStoreField' : _("""See also blog entries 20100803, 20111003, 20120901"""),
    'lino.core.site.Site.preview_limit' : _("""Default value for the
preview_limit
parameter of all tables who don't specify their own one.  Default
value is 15."""),
    'lino.core.kernel.Callback' : _("""A callback is a question that rose during an AJAX action.
The original action is pending until we get a request
that answers the question."""),
    'lino.utils.daemoncommand.DaemonCommand' : _("""If you have an existing Django management command, just rename
it's handle method to handle_daemon and inherit from this
instead of django.core.management.base.BaseCommand."""),
    'lino.utils.test.HttpQuery.json_fields' : _("""Alias for field number 2"""),
    'lino.core.store.StoreField.form2obj_default' : _("""because checkboxes are not submitted when they are off"""),
    'lino.core.plugin.Plugin.short_name' : _("""The abbreviated name of this plugin, shown to the user in places
where shortness is important, e.g. as the label of the tabs of a
detail layout.  This can be a lazily translated string. Defaults
to verbose_name."""),
    'lino.modlib.summaries.Plugin' : _("""See Introduction to plugins."""),
    'lino.core.store.ForeignKeyStoreField' : _("""An atomizer used for all ForeignKey fields."""),
    'lino.modlib.bootstrap3.views.List' : _("""Render a list of records."""),
    'lino.core.site.Site.anonymous_user_profile' : _("""The user profile to be assigned to the anonymous user
(AnonymousUser)."""),
    'lino.modlib.uploads.models.UploadTypes' : _("""The table with all existing upload types."""),
    'lino.modlib.tinymce.Plugin.window_height' : _("""The initial height of the window to use when editing in own
window."""),
    'lino.core.actors.Actor.label' : _("""The text to appear e.g. on a button that will call the default
action of an actor.  This attribute is not inherited to
subclasses.  For Actor subclasses that don't have a
label, Lino will call get_actor_label()."""),
    'lino.core.choicelists.ChoiceList.stored_name' : _("""Every subclass of ChoiceList will be automatically registered.
Define this if your class's name clashes with the name of an
existing ChoiceList."""),
    'lino.core.requests.BaseRequest.master_instance' : _("""The database object which acts as master. This is None for master
requests."""),
    'lino.utils.instantiator.ForeignKeyConverter' : _("""Converter for ForeignKey fields."""),
    'lino.modlib.printing.mixins.PrintableType.template' : _("""The name of the file to be used as template."""),
    'lino.core.choicelists.Choice.text' : _("""A translatable string containing the text to show to the user."""),
    'lino.core.site.Site.project_dir' : _("""Full path to your local project directory."""),
    'lino.utils.xmlgen.cbss.Service' : _("""Base class for the individual services."""),
    'lino.core.permissions.Permittable.workflow_owner_field' : _("""The name of the field that contains the user who is considered to
own an object when Rule.owned_only is checked."""),
    'lino.core.actors.Actor.hide_top_toolbar' : _("""Whether a Detail Window should have navigation buttons, a "New"
and a "Delete" buttons.  In ExtJS UI also influences the title of
a Detail Window to specify only the current element without
prefixing the Tables's title."""),
    'lino.core.site.Site.decimal_group_separator' : _("""Decimal group separator for decfmt()."""),
    'lino.core.actions.DeleteSelected' : _("""The action used to delete the selected row(s). Automatically
installed on every editable actor."""),
    'lino.core.actors.Actor.insert_layout_width' : _("""When specifying an insert_layout using a simple a multline
string, then Lino will instantiate a FormPanel with this width."""),
    'lino.core.model.Model.quick_search_fields' : _("""Explicitly specify the fields to be included in queries with a
quick search value."""),
    'lino.mixins.human.Born.age' : _("""Virtual field displaying the age in years."""),
    'lino.modlib.printing.mixins.CachedPrintableChecker.model' : _("""alias of CachedPrintable"""),
    'lino.modlib.uploads.models.UploadTypes.model' : _("""alias of UploadType"""),
    'lino.modlib.gfks.Plugin' : _("""See Introduction to plugins."""),
    'lino.modlib.gfks.mixins.Controllable' : _("""Mixin for models that are "controllable" by another database object."""),
    'lino.core.ddh.DisableDeleteHandler.fklist' : _("""A list of tuples (model, fk), one item for each FK field in
the application which points to this model."""),
    'lino.core.renderer.Renderer' : _("""See Introduction to User Interface Renderers."""),
    'lino.core.site.Site.default_ui' : _("""The full Python name of the plugin which is to be used as default
user interface on this Site."""),
    'lino.core.tables.AbstractTable.hide_sums' : _("""Set this to True if you don't want Lino to display sums in a table
view."""),
    'lino.core.actions.Action.default_format' : _("""Used internally."""),
    'lino.core.tables.AbstractTable.filter' : _("""If specified, this must be a models.Q object (not a dict of
(fieldname -> value) pairs) which will be passed to Django's
filter
method."""),
    'lino.modlib.users.models.UsersOverview' : _("""A variant of Users showing only active users and
only some fields.  This is used on demo sites in
admin_main.html to display the list of available users."""),
    'lino.core.renderer.TextRenderer' : _("""The renderer used when rendering to .rst files and console output."""),
    'lino.mixins.human.Born' : _("""Abstract base class that adds a birth_date
field and a virtual field "Age"."""),
    'lino.core.site.Site.hidden_languages' : _("""A string with a space-separated list of django codes of languages
that should be hidden."""),
    'lino.core.site.Site.textfield_format' : _("""The default format for text fields.
Valid choices are currently 'plain' and 'html'."""),
    'lino.modlib.office.roles.SiteAdmin' : _("""A user with all permissions."""),
    'lino.core.actors.Actor.hidden_elements' : _("""A set of names of layoutelements which are hidden by default."""),
    'lino.core.actors.Actor.actions' : _("""An AttrDict containing the
actions available on this actor."""),
    'lino.modlib.uploads.choicelists.Shortcut' : _("""Represents a shortcut field."""),
    'lino.core.tables.AbstractTable.slave_grid_format' : _("""How to display this table when it is a slave in a detail
window. Must be one of the following values:"""),
    'lino.modlib.printing.mixins.CachedPrintableChecker' : _("""Checks for missing cache files on all objects which inherit
CachedPrintable."""),
    'lino.modlib.office.roles.OfficeUser' : _("""A user who has access to office functionality like calendar, notes
and uploads."""),
    'lino.core.fields.CharField' : _("""An extension around Django's models.CharField."""),
    'lino.core.roles.SiteUser' : _("""Every authenticated user has this role."""),
    'lino.modlib.extjs.elems.SingleRelatedObjectElement' : _("""The widget used to render a SingleRelatedObjectDescriptor,
i.e. the other side of a OneToOneField."""),
    'lino.utils.djangotest.DjangoManageTestCase' : _("""Adds some extensions to the Django TestCase."""),
    'lino.core.site.Site.ignore_model_errors' : _("""Not yet sure whether this is needed. Maybe when generating
documentation."""),
    'lino.core.auth.DefaultUserMiddleware' : _("""Used when lino.core.site.Site.default_user is non-empty."""),
    'lino.utils.jsgen.VisibleComponent' : _("""A visible component"""),
    'lino.core.utils.Parametrizable.params_panel_hidden' : _("""If this table has parameters, set this to True if the parameters
panel should be initially hidden when this table is being
displayed."""),
    'lino.modlib.plausibility.models.Problems' : _("""The base table for Problem objects."""),
    'lino.utils.jinja.Counter' : _("""Represents a counter. Usage see"""),
    'lino.core.model.Model.allow_cascaded_delete' : _("""A set of names of ForeignKey or GenericForeignKey fields of
this model that allow for cascaded delete."""),
    'lino.core.site.Site.csv_params' : _("""Site-wide default parameters for CSV generation.  This must be a
dictionary that will be used as keyword parameters to Python
csv.writer()"""),
    'lino.utils.dataserializer.FakeDeserializedObject' : _("""loaddata requires DeserializedObject instances, 
but this Deserializer does not bypass pre_save/save methods."""),
    'lino.core.site.Site.allow_duplicate_cities' : _("""In a default configuration (when allow_duplicate_cities is
False), Lino declares a UNIQUE clause for Places to make sure that your
database never contains duplicate cities.  This behaviour mighr
disturb e.g. when importing legacy data that did not have this
restriction.  Set it to True to remove the UNIQUE clause."""),
    'lino.modlib.extjs.elems.HtmlBoxElement' : _("""Element that renders to a Lino.HtmlBoxPanel."""),
    'lino.modlib.smtpd.Plugin' : _("""See Introduction to plugins."""),
    'lino.core.roles.Supervisor' : _("""A user who has permission to act as another user."""),
    'lino.modlib.changes.models.Change.object' : _("""The database object which has been modified."""),
    'lino.api.rt.models' : _("""Shortcut to lino.core.site.Site.models"""),
    'lino.modlib.plausibility.models.AllProblems' : _("""Show all plausibility problems."""),
    'lino.modlib.printing.actions.BasePrintAction' : _("""Base class for all "Print" actions."""),
    'lino.modlib.users.mixins.UserAuthored' : _("""Model mixin for database objects that have a user field which
points to the "author" of this object. The default user is
automatically set to the requesting user."""),
    'lino.utils.test.HttpQuery.expected_rows' : _("""Alias for field number 3"""),
    'lino.core.model.Model.hidden_columns' : _("""If specified, this is the default value for
hidden_columns
of every Table on this model."""),
    'lino.core.tables.AbstractTable.page_length' : _("""Number of rows to display per page.  Used to control the height of
a combobox of a ForeignKey pointing to this model"""),
    'lino.modlib.bootstrap3.views.Element' : _("""Render a single record."""),
    'lino.modlib.users.choicelists.UserProfiles.hidden_languages' : _("""Default value for the
hidden_languages of newly
attached choice item."""),
    'lino.modlib.plausibility.Plugin.responsible_user' : _("""The username
of the main plausibility responsible, i.e. a designated
user who will be attributed to plausibility problems for which
no specific responible could be designated (returned by the
checker's get_responsible_user
method)."""),
    'lino.api.selenium.Album' : _("""Generates one directory of screenshots images and their index.rst
file."""),
    'lino.core.choicelists.ChoiceListField' : _("""A field that stores a value to be selected from a
ChoiceList."""),
    'lino.core.site.Site.datetime_format_extjs' : _("""Format (in ExtJS syntax) to use for formatting timestamps in AJAX
calls.  If you change this setting, you also need to override
parse_datetime()."""),
    'lino.modlib.changes.models.ChangesByMaster.model' : _("""alias of Change"""),
    'lino.core.actors.Actor.allow_create' : _("""If this is False, then then Actor won't have no insert_action."""),
    'lino.core.site.Site.migration_class' : _("""If you maintain a data migrator module for your application,
specify its name here."""),
    'lino.modlib.plausibility.choicelists.Checker' : _("""Base class for the choices of Checkers."""),
    'lino.modlib.notify.mixins.Observable' : _("""Mixin for models which can "emit notifications" and define a list
"observers" to be notified when a notification is emitted."""),
    'lino.api.doctest.HttpQuery.kwargs' : _("""Alias for field number 4"""),
    'lino.modlib.notify.models.AllNotifications.model' : _("""alias of Notification"""),
    'lino.mixins.human.Human.full_name' : _("""Returns a one-line string composed of salutation, title,
first_name and last_name."""),
    'lino.core.actors.Actor.detail_layout' : _("""Define the form layout to use for the detail window.  Actors with
detail_layout will automatocally get a show_detail
action."""),
    'lino.mixins.human.Human.title' : _("""An optional name prefix like "Dr." or "PhD", used to specify a
professional position or academic qualification."""),
    'lino.modlib.users.choicelists.UserProfile.hidden_languages' : _("""A subset of languages which
should be hidden in this user profile.  Default value is
hidden_languages.  This is
used on multilingual sites with more than 4 or 5 languages."""),
    'lino.modlib.extjs.elems.Container' : _("""Base class for Layout Elements that can contain other Layout Elements:
Panel,
TabPanel,
FormPanel,
GridPanel"""),
    'lino.modlib.uploads.models.UploadsByController.model' : _("""alias of Upload"""),
    'lino.utils.quantities.Duration' : _("""A duration, expressed in hours:minutes."""),
    'lino.core.site.Site.site_config' : _("""This property holds a cached version of the one and only
SiteConfig row
that holds site-wide database-stored and web-editable Site
configuration parameters."""),
    'lino.core.dbtables.Table.use_as_default_table' : _("""Set this to False if this Table should not become the
Model's default table."""),
    'lino.core.utils.Parametrizable.params_layout' : _("""The layout to be used for the parameter panel.
If this table or action has parameters, specify here how they
should be laid out in the parameters panel."""),
    'lino.core.model.Model.submit_insert' : _("""This is the action represented by the "Create" button of an Insert
window. See lino.modlib.dedupe for an example of how to
override it."""),
    'lino.mixins.sequenced.MoveUp' : _("""Move current row one upwards. This action is available on any
Sequenced object as Sequenced.move_up."""),
    'lino.modlib.printing.mixins.PrintableType.templates_group' : _("""Default value for templates_group is the model's full name."""),
    'lino.utils.test.HttpQuery.kwargs' : _("""Alias for field number 4"""),
    'lino.core.fields.Constant' : _("""Deserves more documentation."""),
    'lino.core.site.Site.site_prefix' : _("""The string to prefix to every URL of the Lino web interface."""),
    'lino.modlib.comments.Plugin' : _("""See Introduction to plugins."""),
    'lino.core.fields.RecurrenceField' : _("""Deserves more documentation."""),
    'lino.utils.SumCollector' : _("""A dictionary of sums to be collected using an arbitrary key."""),
    'lino.core.store.RequestStoreField' : _("""StoreField for lino.core.fields.RequestField."""),
    'lino.modlib.users.Plugin' : _("""See Introduction to plugins."""),
    'lino.mixins.human.Human' : _("""Base class for all models that represent a human."""),
    'lino.modlib.printing.actions.DirectPrintAction' : _("""Print using a hard-coded template and without cache."""),
    'lino.core.actions.Action.label' : _("""The label of this action. A short descriptive text in user
language."""),
    'lino.core.tables.AbstractTable.column_names' : _("""A string that describes the list of columns of this table."""),
    'lino.core.site.Site.default_build_method' : _("""The default build method to use when rendering printable documents."""),
    'lino.core.layouts.LayoutHandle' : _("""A LayoutHandle analyzes some subclass of BaseLayout and
stores the resulting layout elements provided by the renderer."""),
    'lino.core.dbtables.Table.model' : _("""The model on which this table iterates."""),
    'lino.modlib.jinja.Plugin' : _("""See Introduction to plugins."""),
    'lino.core.fields.IncompleteDateField' : _("""A field that behaves like a DateField, but accepts
incomplete dates represented using
lino.utils.format_date.IncompleteDate."""),
    'lino.core.site.Site.django_settings' : _("""This is a reference to the globals() dictionary of your
settings.py file (the one you provided when instantiating
the Site object)."""),
    'lino.modlib.system.models.SiteConfigs' : _("""The table used to present the SiteConfig row in a Detail form.
See also lino.Lino.get_site_config().
Deserves more documentation."""),
    'lino.modlib.system.choicelists.Genders' : _("""Defines the two possible choices "male" and "female"
for the gender of a person."""),
    'lino.core.site.Site.ui' : _("""Deprecated alias for kernel."""),
    'lino.core.tables.AbstractTable.exclude' : _("""If specified, this must be dict which will be passed to Django's
exclude
method on the queryset."""),
    'lino.core.site.Site.server_url' : _("""The "official" URL used by "normal" users when accessing this Lino
site. This is used by templates such as the email sent by
lino.modlib.notify.Notification"""),
    'lino.modlib.gfks.models.ContentTypes' : _("""Default table for django.contrib.ContentType."""),
    'lino.core.site.Site.make_missing_dirs' : _("""Set this to False if you don't want this Site to automatically
create missing directories when needed (but to raise an exception
in these cases, asking you to create it yourself)"""),
    'lino.modlib.system.models.SiteConfig' : _("""This model should have exactly one instance,
used to store persistent global site parameters.
Application code sees this instance as settings.SITE.site_config."""),
    'lino.core.actions.Action' : _("""Abstract base class for all actions."""),
    'lino.core.choicelists.Choice' : _("""A constant value whose unicode representation depends on the
current language at runtime.  Every item of a ChoiceList
must be an instance of Choice or a subclass thereof."""),
    'lino.core.requests.BaseRequest.renderer' : _("""The renderer to use when processing this request."""),
    'lino.core.actions.InsertRow' : _("""Open the Insert window filled with a row of blank or default
values.  The new row will be actually created only when this
window gets submitted."""),
    'lino.core.actions.ShowSlaveTable' : _("""An action which opens a window showing the table specified when
instantiating the action."""),
    'lino.core.site.Site.use_vinylfox' : _("""Whether to use VinylFox extensions for HtmlEditor.
This feature was experimental and doesn't yet work (and maybe never will).
See /blog/2011/0523."""),
    'lino.mixins.periods.Today' : _("""A ParameterPanel
with a field today which defaults to today."""),
    'lino.api.doctest.HttpQuery.json_fields' : _("""Alias for field number 2"""),
    'lino.modlib.plausibility.choicelists.Checkers' : _("""The list of plausibility problem types known by this application."""),
    'lino.core.store.Store' : _("""A Store is the collection of StoreFields for a given actor."""),
    'lino.sphinxcontrib.actordoc.CurrentLanguage' : _("""Tell Sphinx to switch to the specified language until the end of
this document."""),
    'lino.modlib.extjs.Plugin.media_root' : _("""Path to the ExtJS root directory.  Only used when
media_base_url is None, and when the media directory has
no symbolic link named extjs pointing to the ExtJS root
directory."""),
    'lino.utils.mldbc.fields.BabelTextField' : _("""Define a variable number of clones of the "master" field,
one for each language .
See Multilingual database content."""),
    'lino.mixins.Registrable' : _("""Base class to anything that may be "registered" and "deregistered"
(e.g. Invoices, Vouchers, Declarations, Reservations,...).
"Registered" in general means "this object has been taken account of".
Registered objects are not editable."""),
    'lino.utils.mti.EnableChild' : _("""Rendered as a checkbox that indicates whether an mti child of the
given model exists."""),
    'lino.modlib.users.models.User.partner' : _("""Pointer to the Partner instance related to
this user."""),
    'lino.core.actions.Action.use_param_panel' : _("""Used internally. This is True for window actions whose window use
the parameter panel: grid and emptytable (but not showdetail)"""),
    'lino.modlib.extjs.elems.Panel' : _("""A vertical Panel is vflex if and only if at least one of its
children is vflex.  A horizontal Panel is vflex if and only if
all its children are vflex (if vflex and non-vflex elements are
together in a hbox, then the vflex elements will get the height of
the highest non-vflex element)."""),
    'lino.core.utils.Parametrizable.parameters' : _("""User-definable parameter fields for this actor or action.
Set this to a dict of name = models.XyzField() pairs."""),
    'lino.core.site.Site.help_email' : _("""An e-mail address where users can get help. This is included in
admin_main.html."""),
    'lino.mixins.sequenced.Sequenced.move_down' : _("""Exchange the seqno of this item and the next item."""),
    'lino.modlib.about.models.Inspector' : _("""Shows a simplistic "inspector" which once helped me for debugging.
Needs more work to become seriously useful..."""),
    'lino.core.site.Site.models' : _("""An AttrDict which maps every
installed app_label to the corresponding models.py
module object."""),
    'lino.utils.instantiator.LookupConverter' : _("""A Converter for ForeignKey and ManyToManyField. 
If the lookup_field is a BabelField, then it tries all available languages."""),
    'lino.utils.IncompleteDate' : _("""Naive representation of a potentially incomplete gregorian date."""),
    'lino.core.site.Site.use_esteid' : _("""Whether to include functionality to read Estonian id cards.
This option is experimental and doesn't yet work."""),
    'lino.modlib.users.choicelists.UserProfile.readonly' : _("""Whether users with this profile get only write-proteced access."""),
    'lino.core.actors.Actor.hide_window_title' : _("""This is set to True e.h. in home pages
(e.g. lino_welfare.modlib.pcsw.models.Home)."""),
    'lino.core.actions.Action.auto_save' : _("""What to do when this action is being called while the user is on a
dirty record."""),
    'lino.modlib.users.mixins.TimezoneHolder' : _("""Mixin for database models which have a timezone field."""),
    'lino.core.requests.ValidActionResponses' : _("""These are the allowed keyword arguments for ar.set_response, and the action responses supported by
Lino.handle_action_result() (defined in linolib.js)."""),
    'lino.core.site.Site.ldap_auth_server' : _("""This should be a string with the domain name and DNS (separated by a
space) of the LDAP server to be used for authentication.  Example:"""),
    'lino.utils.mldbc.mixins.BabelNamed' : _("""Mixin for models that have a babel field name (labelled
"Description" by default) for each language."""),
    'lino.core.actors.Actor.master' : _("""The class of the "master" for this actor."""),
    'lino.modlib.plausibility.models.ProblemsByChecker.model' : _("""alias of Problem"""),
    'lino.modlib.printing.mixins.PrintableType.build_method' : _("""A pointer to an item of
lino.modlib.printing.choicelists.BuildMethods."""),
    'lino.core.tables.AbstractTable.hidden_columns' : _("""If given, this is specifies the data elements that should be
hidden by default when rendering this table.  Example:"""),
    'lino.core.tables.AbstractTable.auto_fit_column_widths' : _("""Set this to True if you want to have the column widths adjusted
to always fill the available width.  This implies that there will
be no horizontal scrollbar."""),
    'lino.core.actions.MultipleRowAction' : _("""Base class for actions that update something on every selected row."""),
    'lino.utils.djangotest.WebIndexTestCase' : _("""Designed to be just imported. No subclassing needed."""),
    'lino.core.actions.Action.key' : _("""The hotkey to associate to this action in a user interface."""),
    'lino.core.utils.ChangeWatcher' : _("""Lightweight volatile object to watch changes on a database object."""),
    'lino.core.store.BooleanStoreField' : _("""A StoreField for
BooleanField."""),
    'lino.core.fields.PasswordField' : _("""Stored as plain text in database, but not displayed in user
interface."""),
    'lino.core.utils.PseudoRequest' : _("""A Django HTTP request which isn't really one."""),
    'lino.core.site.Site.version' : _("""The version number."""),
    'lino.core.site.Site.user_profiles_module' : _("""The full Python path of the user profiles module to be used on
this site."""),
    'lino.core.actors.Actor.known_values' : _("""A dict of fieldname -> value pairs that specify "known values"."""),
    'lino.modlib.plausibility.models.MyProblems' : _("""Shows the plausibility problems assigned to this user."""),
    'lino.core.layouts.ColumnsLayout' : _("""A layout for describing the columns of a table."""),
    'lino.modlib.weasyprint.choicelists.WeasyPdfBuildMethod' : _("""Like WeasyBuildMethod, but the rendered HTML is then
passed through weasyprint which converts from HTML to PDF."""),
    'lino.core.plugin.Plugin.needed_by' : _("""If not None, then it is the Plugin instance which caused this
plugin to automatically install."""),
    'lino.core.site.Site.demo_fixtures' : _("""The list of fixtures to be loaded by the initdb_demo
command."""),
    'lino.modlib.system.choicelists.ObservedEvent' : _("""Base class for choices of "observed event"-style choicelists."""),
    'lino.mixins.uploadable.Uploadable.mimetype' : _("""The Media type
of the file.  See also this thread
about length of MIME type field."""),
    'lino.core.actions.Action.js_handler' : _("""This is usually None. Otherwise it is the name of a Javascript
callable to be called without arguments. That callable must have
been defined in a lino.core.plugin.Plugin.site_js_snippets of the plugin."""),
    'lino.core.site.Site.logger_filename' : _("""The name of Lino's main logger file, created in
setup_logging()."""),
    'lino.utils.odsreader.SimpleOdsReader.headers' : _("""A list of unicode strings, one for each column in the file.  The
headers specified here must match exactly those found in the .ods
file."""),
    'lino.core.actions.SubmitInsert' : _("""Called when the OK button of an Insert Window was clicked.
Installed as submit_insert on every dd.Model <lino.core.model.Model>."""),
    'lino.utils.test.DocTest.doctest_files' : _("""The files to be tested."""),
    'lino.core.store.DisableEditingStoreField' : _("""A field whose value is the result of the get_row_permission
method on that row.
New feature since /blog/2011/0830"""),
    'lino.core.actors.Actor.parameters' : _("""See lino.core.utils.Parametrizable.parameters."""),
    'lino.core.actors.Actor.icon_name' : _("""The lino.core.actions.Action.icon_name to be used for a
lino.core.actions.ShowSlaveTable action on this actor."""),
    'lino.core.fields.CustomField' : _("""Mixin to create a custom field."""),
    'lino.modlib.printing.mixins.CachedPrintable.build_time' : _("""Timestamp of the built target file. Contains None
if no build hasn't been called yet."""),
    'lino.core.site.Site.datetime_format_strftime' : _("""Format (in strftime syntax) to use for formatting timestamps in
AJAX responses.  If you change this setting, you also need to
override parse_datetime()."""),
    'lino.core.site.Site.use_awesome_uploader' : _("""Whether to use AwesomeUploader.
This option was experimental and doesn't yet work (and maybe never will)."""),
    'lino.core.choicelists.ChoiceList.show_values' : _("""Set this to True if the user interface should include the value
attribute of each choice."""),
    'lino.modlib.changes.models.ChangesByObject' : _("""Slave Table showing the direct changes related to the current
object."""),
    'lino.core.ddh.DisableDeleteHandler' : _("""A helper object used to find out whether a known object can be
deleted or not."""),
    'lino.modlib.gfks.fields.GenericForeignKey' : _("""Add verbose_name and help_text to Django's GFK."""),
    'lino.utils.dbfreader.DBTFile' : _("""Represents a DBT block file"""),
    'lino.utils.ucsv.UnicodeReader' : _("""A CSV reader which will iterate over lines in the CSV file "f",
which is encoded in the given encoding."""),
    'lino.core.site.Site.auth_middleware' : _("""Override used Authorisation middlewares with supplied tuple of
middleware class names."""),
    'lino.utils.dbfreader.FPTFile' : _("""Represents an FPT block file"""),
    'lino.modlib.changes.models.Change' : _("""A registered change in the database."""),
    'lino.core.fields.RequestField' : _("""A VirtualField whose values are table action requests to
be rendered as a clickable integer containing the number of rows.
Clicking on it will open a window with the table."""),
    'lino.utils.media.MediaFile' : _("""Represents a file on the server below MEDIA_ROOT with
two properties name and url."""),
    'lino.utils.xmlgen.cbss.SSDNns' : _("""The SSDN namespace used for wrapping "classical" CBSS services."""),
    'lino.modlib.uploads.models.Upload' : _("""Represents an uploaded file."""),
    'lino.core.fields.RemoteField' : _("""A field on a related object."""),
    'lino.core.actions.Action.preprocessor' : _("""Name of a Javascript function to be invoked on the web client when
this action is called."""),
    'lino.core.actors.Actor.simple_parameters' : _("""A set of names of filter parameters which are handled automatically."""),
    'lino.core.tables.AbstractTable.order_by' : _("""If specified, this must be a tuple or list of field names which
will be passed to Django's order_by
method in order to sort the rows of the queryset."""),
    'lino.core.store.MethodStoreField' : _("""Deprecated. See /blog/2012/0327."""),
    'lino.core.actors.Actor.model' : _("""Set this on"""),
    'lino.modlib.extjs.elems.ChoiceListFieldElement' : _("""Like ChoicesFieldElement, but we use the fact that
choicelists are actors to define them once and refer to them.
Special case are choicelist fields with blank=True: these must
dynamicaly add a blank choice to the the choicelist."""),
    'lino.core.site.Site.verbose_name' : _("""The name of this application, to be displayed to end-users at
different places."""),
    'lino.core.site.Site.legacy_data_path' : _("""Used by custom fixtures that import data from some legacy
database."""),
    'lino.core.site.Site.title' : _("""The title of this web site to appear in the browser window.  If
this is None, Lino will use verbose_name as default value."""),
    'lino.mixins.dupable.SimilarObjects' : _("""Shows the other objects who are similar to this one."""),
    'lino.utils.dates.DatePeriodValue.end_date' : _("""The end date"""),
    'lino.core.site.Site.kernel' : _("""This attribute is available only after startup().
See lino.core.kernel."""),
    'lino.modlib.plausibility.models.Problem.checker' : _("""The Checker which reported
this problem."""),
    'lino.utils.mldbc.fields.BabelCharField' : _("""Define a variable number of CharField database fields, one for
each language of your lino.core.site.Site.languages.  See
Multilingual database content."""),
    'lino.mixins.CreatedModified' : _("""Adds two timestamp fields created and modified."""),
    'lino.modlib.tinymce.Plugin.media_name' : _("""Lino currently includes three versions of TinyMCE, but for
production sites we still use the eldest version 3.4.8."""),
    'lino.modlib.plausibility.choicelists.Checker.model' : _("""The model to be checked. This may be an abstract model.  It can
also be None, but then you must define your own
get_checkable_models() method."""),
    'lino.core.actions.Action.disable_primary_key' : _("""Whether primary key fields should be disabled when using this
action. This is True for all actions except InsertRow."""),
    'lino.mixins.human.Born.birth_date' : _("""An IncompleteDateField."""),
    'lino.modlib.printing.choicelists.RtfBuildMethod' : _("""Generates .rtf files from .rtf templates.
Not actively used."""),
    'lino.core.ddh.DisableDeleteHandler.model' : _("""The owning model (i.e. m._lino_ddh.model is m is True for
every model)"""),
    'lino.mixins.dupable.Dupable.dupable_word_model' : _("""Full name of the model used to hold dupable words for instances of
this model.  Applications can specify a string which will be
resolved at startup to the model's class object."""),
    'lino.core.site.Site.is_demo_site' : _("""When this is True, then this site runs in "demo" mode.  "Demo
mode" means:"""),
    'lino.utils.test.CommonTestCase' : _("""An extended django.test.TestCase."""),
    'lino.utils.djangotest.DjangoManageTestCase.defining_module' : _("""When you decorate your subclass of TestCase, you must also specify:"""),
    'lino.core.actors.Actor.app_label' : _("""Specify this if you want to "override" an existing actor."""),
    'lino.modlib.extjs.elems.GenericForeignKeyElement' : _("""A DisplayElement specially adapted to a GFK field."""),
    'lino.modlib.printing.mixins.CachedPrintable' : _("""Mixin for Models that generate a unique external file at a
determined place when being printed."""),
    'lino.mixins.human.Human.middle_name' : _("""A space-separated list of all middle names."""),
    'lino.modlib.users.mixins.UserAuthored.manager_roles_required' : _("""The list of required roles for getting permission to edit other
users' work."""),
    'lino.core.site.Site.default_user' : _("""Username of the user to be used for all incoming requests.  Setting
this to a nonempty value will disable authentication on this site.
The special value 'anonymous' will cause anonymous requests
(whose user attribute is the AnonymousUser instance)."""),
    'lino.modlib.printing.choicelists.TemplatedBuildMethod' : _("""Base class for all build methods.  A build method encapsulates the
process of generating a "printable document" that inserts data
from the database into a template, using a given combination of a
template parser and post-processor."""),
    'lino.core.model.Model.workflow_buttons' : _("""A virtual field that displays the workflow buttons for this
row and the given action request."""),
    'lino.modlib.weasyprint.Plugin' : _("""See Introduction to plugins."""),
    'lino.core.site.Site.cache_dir' : _("""The directory where Lino will create temporary data for this
project, including the media directory and the
default.db file."""),
    'lino.modlib.printing.Plugin' : _("""See Introduction to plugins."""),
    'lino.core.plugin.Plugin.extends_models' : _("""If specified, a list of model names for which this app provides a
subclass."""),
    'lino.modlib.users.mixins.My.user' : _("""Show only objects whose author is the given user."""),
    'lino.modlib.comments.models.Comment' : _("""A comment is a short text which some user writes about some
other database object. It has no recipient."""),
    'lino.core.actions.Action.keep_user_values' : _("""Whether the parameter window should keep its values between
different calls. If this is True, Lino does not fill any default
values and leaves those from a previous call."""),
    'lino.core.site.Site.startup_time' : _("""The time when this Site has been instantiated,
in other words the startup time of this Django process.
Don't modify this."""),
    'lino.core.site.LanguageInfo.name' : _("""Alias for field number 1"""),
    'lino.core.menus.MenuItem' : _("""A menu item. Note that this is subclassed by Menu: a menu
is also a menu item."""),
    'lino.modlib.office.Plugin' : _("""See Introduction to plugins."""),
    'lino.core.workflows.State' : _("""A State is a specialized Choice that adds the
add_transition() method."""),
    'lino.core.actions.GridEdit' : _("""Open a window with a grid editor on this table as main item."""),
    'lino.mixins.periods.Yearly' : _("""An ObservedPeriod for which start_date defaults to Jan
1st and end_date to Dec 31 of the current year."""),
    'lino.core.fields.PriceField' : _("""A thin wrapper around Django's DecimalField
which adds default values for decimal_places, max_length and
max_digits."""),
    'lino.core.store.StoreField.field' : _("""The database field (a subclass of
django.db.models.fields.Field)"""),
    'lino.modlib.users.models.User.username' : _("""Must be unique.
Leaving this empty means that the user cannot log in."""),
    'lino.core.actors.Actor.master_key' : _("""The name of a ForeignKey field of this table's model that
points to it's master.  The master_key is
automatically added to hidden_columns."""),
    'lino.utils.dpy.Migrator' : _("""The SITE's Migrator class is instantiated by install_migrations."""),
    'lino.core.model.Model.quick_search_fields_digit' : _("""Same as quick_search_fields, but this list is used when the
search text contains only digits (and does not start with '0')."""),
    'lino.core.workflows.Workflow' : _("""A Workflow is a specialized ChoiceList used for defining the
states of a workflow."""),
    'lino.utils.jsgen.Component' : _("""A Component is a Variable whose value is a dict of otpions.
Deserves more documentation."""),
    'lino.modlib.printing.mixins.TypedPrintable' : _("""A CachedPrintable that uses a "Type" for deciding which
template to use on a given instance."""),
    'lino.core.site.Site.url' : _("""The URL of the website that describes this application.
Used e.g. in a Site â£ About dialog box."""),
    'lino.core.permissions.Permittable.debug_permissions' : _("""Whether to log Permission debug messages for this action."""),
    'lino.mixins.uploadable.Uploadable.file' : _("""Pointer to the file itself (a Django FileField)."""),
    'lino.modlib.extjs.views.AdminIndex' : _("""Similar to PlainIndex"""),
    'lino.utils.djangotest.RemoteAuthTestCase' : _("""Base class for tests that use remote http authentication.  We
override the __call__() method in order to simulate
remote_user_header <lino.core.site.Site.remote_user_header>
being set to 'REMOTE_USER'."""),
    'lino.core.site.LanguageInfo' : _("""A named tuple with four fields:"""),
    'lino.modlib.wkhtmltopdf.Plugin' : _("""See Introduction to plugins."""),
    'lino.core.site.Site.decimal_separator' : _("""Set this to either '.' or ',' to define wether to use
comma or dot as decimal point separator when entering a
DecimalField."""),
    'lino.mixins.Registrable.state' : _("""The ChoiceList of the state field must have at least two items
named "draft" and "registered".
There may be additional states.
Every state must have an extra attribute "editable"."""),
    'lino.core.actions.Action.select_rows' : _("""True if this action needs an object to act on."""),
    'lino.core.roles.SiteAdmin' : _("""The root user of this system."""),
    'lino.utils.xmlgen.html.HtmlNamespace' : _("""The HTML namespace.
This is instantiated as E."""),
    'lino.utils.djangotest.DjangoManageTestCase.override_djangosite_settings' : _("""If specified, this is a dict of Site
attributes to override before running the test."""),
    'lino.core.actors.Actor.window_size' : _("""Set this to a tuple of (height, width) to have this actor
display in a modal non-maximized window."""),
    'lino.core.dbtables.Table.expand_memos' : _("""(No longer used; see docs/tickets/44).  Whether multi-line text
fields in Grid views should be expanded in by default or not."""),
    'lino.utils.odsreader.SimpleOdsReader.filename' : _("""The full path name of the .ods file to be read."""),
    'lino.utils.mldbc.fields.LanguageField' : _("""A field that lets the user select a language from the available
lino.core.site.Site.languages."""),
    'lino.utils.sendchanges.Emitter' : _("""The object returned by register()."""),
    'lino.core.utils.ChangeWatcher.watched' : _("""The model instance which has been changed and caused the signal."""),
    'lino.core.actors.Actor.insert_layout' : _("""Define the form layout to use for the insert window.  If there's a
detail_layout but no insert_layout, Lino will use
detail_layout for the insert window."""),
    'lino.core.tablerequest.TableRequest' : _("""A specialized ActionRequest whose actor is a table."""),
    'lino.modlib.tinymce.Plugin.document_domain' : _("""When serving static files from a different subdomain, TinyMCE needs
to know about this. Typical usage is to specify this in your
djangosite_local.py file (The djangosite_local module):"""),
    'lino.utils.config.ConfigDir' : _("""A directory that may contain configuration files."""),
    'lino.core.site.Site.never_build_site_cache' : _("""Set this to True if you want that Lino never (re)builds the site
cache, even when asked.  This can be useful on a development
server when you are debugging directly on the generated
lino*.js.  Or for certain unit test cases."""),
    'lino.core.site.Site.root_urlconf' : _("""The value to be attribute to ROOT_URLCONF when this
Site instantiates."""),
    'lino.core.store.StoreField.list_values_count' : _("""Necessary to compute Store.pk_index."""),
    'lino.core.site.Site.use_quicktips' : _("""Whether to make use of Ext.QuickTips for
displaying Help Texts and internal field names (if
show_internal_field_names)."""),
    'lino.api.doctest.HttpQuery.url_base' : _("""Alias for field number 1"""),
    'lino.core.auth.AuthMiddleWareBase' : _("""Common base class for RemoteUserMiddleware,
SessionUserMiddleware and NoUserMiddleware."""),
    'lino.modlib.notify.models.AllNotifications' : _("""The gobal list of all notifications."""),
    'lino.utils.instantiator.GenericForeignKeyConverter' : _("""Converter for GenericForeignKey fields."""),
    'lino.modlib.tinymce.Plugin.window_width' : _("""The initial width of the window to use when editing in own
window."""),
    'lino.utils.dpy.FakeDeserializedObject' : _("""Imitates DeserializedObject required by loaddata."""),
    'lino.core.merge.MergeAction' : _("""Merge this object into another object of same class."""),
    'lino.core.workflows.State.button_text' : _("""The text to appear on any button representing this state."""),
    'lino.mixins.ProjectRelated' : _("""Mixin for Models that are automatically related to a "project".  A
project means here "the central most important thing that is used
to classify most other things"."""),
    'lino.core.site.Site.top_level_menus' : _("""The list of top-level menu items. See setup_menu()."""),
    'lino.core.requests.ValidActionResponses.data_record' : _("""Certain requests are expected to return the detailed information
about a single data record. That's done in data_record
which must itself be a dict with the following keys:"""),
    'lino.modlib.davlink.Plugin' : _("""See Introduction to plugins."""),
    'lino.core.tables.AbstractTable.master_field' : _("""For internal use. Automatically set to the field descriptor of the
master_key."""),
    'lino.core.site.Site.uid' : _("""A universal identifier for this Site.  This is needed when
synchronizing with CalDAV server.  Locally created calendar
components in remote calendars will get a UID based on this
parameter, using "%s@%s" % (self.pk, settings.SITE.kernel)."""),
    'lino.mixins.Created.created' : _("""The timestame when this object was created."""),
    'lino.modlib.weasyprint.choicelists.WeasyBuildMethod' : _("""The base class for both build methods."""),
    'lino.utils.mti.ChildCollector' : _("""A Collector that does not delete the MTI parents."""),
    'lino.core.site.Site' : _("""The base class for a Lino application.  This class is designed to
be overridden by both application developers and local site
administrators.  Your SITE setting is expected to
contain an instance of a subclass of this."""),
    'lino.utils.xmlgen.html.Document' : _("""A pythonic representation of a <body> with a <title> and
some <head> tags for stylesheets."""),
    'lino.core.layouts.BaseLayout' : _("""Base class for all Layouts (FormLayout, ColumnsLayout
and  ParamsLayout)."""),
    'lino.core.site.Site.date_format_regex' : _("""Format (in Javascript regex syntax) to use for displaying dates to
the user.  If you change this setting, you also need to override
parse_date()."""),
    'lino.modlib.changes.models.ChangesByObject.model' : _("""alias of Change"""),
    'lino.modlib.printing.choicelists.BuildMethods' : _("""The choicelist of build methods offered on this site."""),
    'lino.core.plugin.Plugin.url_prefix' : _("""The url prefix under which this app should ask to
install its url patterns."""),
    'lino.sphinxcontrib.actordoc.Lino2rstDirective' : _("""Defines the lino2rst directive."""),
    'lino.core.site.Site.use_filterRow' : _("""See /blog/2011/0630.
This option was experimental and doesn't yet work (and maybe never will)."""),
    'lino.core.site.Site.verbose_client_info_message' : _("""Set this to True if actions should send debug messages to the client.
These will be shown in the client's Javascript console only."""),
    'lino.core.site.TestSite' : _("""Used to simplify doctest strings because it inserts default values
for the two first arguments that are mandatory but not used in our
examples:"""),
    'lino.core.site.Site.use_tinymce' : _("""Replaced by lino.modlib.tinymce."""),
    'lino.core.tables.AbstractTable.grid_configs' : _("""Will be filled during lino.core.table.Table.do_setup()."""),
    'lino.core.tables.ButtonsTable' : _("""A VirtualTable with only one column and whose rows are
action buttons.  Subclasses must implement get_data_rows to
yield action buttons."""),
    'lino.mixins.polymorphic.Polymorphic' : _("""Mixin for models that use Multiple Table Inheritance to implement
polymorphism."""),
    'lino.core.actions.Action.sort_index' : _("""Determins the sort order in which the actions will be presented to
the user."""),
    'lino.core.site.Site.use_jasmine' : _("""Whether to use the Jasmine
testing library."""),
    'lino.core.choicelists.ChoiceList.preferred_width' : _("""Preferred width (in characters) used by
fields that refer to
this list."""),
    'lino.modlib.notify.models.Notification.owner' : _("""The database object this message is about.
This field is labelled About."""),
    'lino.core.site.LanguageInfo.suffix' : _("""Alias for field number 3"""),
    'lino.modlib.importfilters.Plugin' : _("""See Introduction to plugins."""),
    'lino.core.site.Site.is_local_project_dir' : _("""Contains True if this is a "local" project.  For local projects,
Lino checks for local fixtures and config directories and adds
them to the default settings."""),
    'lino.modlib.system.models.BuildSiteCache' : _("""Rebuild the site cache.
This action is available on About."""),
    'lino.mixins.duplicable.Duplicate' : _("""Duplicate the selected row. This will call
lino.core.model.Model.on_duplicate() on the new object and
on related objects."""),
    'lino.modlib.plausibility.models.MyProblems.model' : _("""alias of Problem"""),
    'lino.mixins.periods.DatePeriod' : _("""A model mixin for models which represent a period whose start and
end are date fields."""),
    'lino.core.site.Site.sidebar_width' : _("""Used by lino.modlib.plain.
Width of the sidebar in 1/12 of total screen width.
Meaningful values are 0 (no sidebar), 2 or 3."""),
    'lino.modlib.extjs.Plugin.enter_submits_form' : _("""Whether the ENTER key (or CTRL+ENTER when in a
textarea field) should submit the form."""),
    'lino.core.fields.PercentageField' : _("""A field to express a percentage.
The database stores this like a DecimalField.
Plain HTML adds a "%"."""),
    'lino.core.site.Site.alt_date_formats_extjs' : _("""Alternative date entry formats accepted by ExtJS Date widgets."""),
    'lino.core.tables.AbstractTable.custom_groups' : _("""Used internally to store groups defined by this Table."""),
    'lino.modlib.users.models.ChangePassword' : _("""Dialog action to change the password of a user."""),
    'lino.utils.dates.DatePeriodValue' : _("""A named tuple with the following fields:"""),
    'lino.utils.pythontest.TestCase' : _("""An extended atelier.test.TestCase to be run using
setup.py in the root of a project which may contain
several Django projects."""),
    'lino.modlib.printing.mixins.PrintableType' : _("""Base class for models that specify the
TypedPrintable.type."""),
    'lino.utils.daemoncommand.DaemonCommand.help' : _("""The loggers to preserve. If not None, this should be a list of
loggers (logging.Logger instances) whose file handles
should not get closed."""),
    'lino.core.keyboard.Hotkey' : _("""Represents a combination of keystrokes."""),
    'lino.core.actions.Action.show_in_bbar' : _("""Whether this action should be displayed as a button in the toolbar
and the context menu."""),
    'lino.core.site.Site.use_css_tooltips' : _("""Whether to make use of CSS tooltips
when displaying help texts defined in lino.models.HelpText."""),
    'lino.core.site.Site.languages' : _("""The language distribution used on this site.  It has its own
chapter The languages of a Site in the Developers Guide."""),
}
